package com.emc.performance.epl.serialization;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WorkloadStampsProto.proto

public final class WorkloadStampsProto {
  private WorkloadStampsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code KPICategory}
   */
  public enum KPICategory
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ARRAY = 0;</code>
     */
    ARRAY(0, 0),
    /**
     * <code>DEVICE = 1;</code>
     */
    DEVICE(1, 1),
    /**
     * <code>FE_DIR = 2;</code>
     */
    FE_DIR(2, 2),
    /**
     * <code>BE_DIR = 3;</code>
     */
    BE_DIR(3, 3),
    /**
     * <code>RDF_DIR = 4;</code>
     */
    RDF_DIR(4, 4),
    /**
     * <code>DISK = 5;</code>
     */
    DISK(5, 5),
    /**
     * <code>FE_PORT = 6;</code>
     */
    FE_PORT(6, 6),
    /**
     * <code>CP = 7;</code>
     */
    CP(7, 7),
    /**
     * <code>RDFA_GRP = 8;</code>
     */
    RDFA_GRP(8, 8),
    /**
     * <code>RDF_LINK = 9;</code>
     */
    RDF_LINK(9, 9),
    /**
     * <code>EVENT = 10;</code>
     *
     * <pre>
     *KGKG: DO NOT REMOVE 
     * </pre>
     */
    EVENT(10, 10),
    /**
     * <code>DEV_POOL = 11;</code>
     *
     * <pre>
     *TAIL;
     * </pre>
     */
    DEV_POOL(11, 11),
    /**
     * <code>THIN_POOL = 12;</code>
     *
     * <pre>
     * Thin Pool Stats 
     * </pre>
     */
    THIN_POOL(12, 12),
    /**
     * <code>RDF_DEV = 13;</code>
     */
    RDF_DEV(13, 13),
    /**
     * <code>DEV_CACH = 14;</code>
     *
     * <pre>
     * Device Host Cache Stats 
     * </pre>
     */
    DEV_CACH(14, 14),
    /**
     * <code>EXT_DISK = 15;</code>
     */
    EXT_DISK(15, 15),
    /**
     * <code>BOARD = 16;</code>
     *
     * <pre>
     *CONTAINER;
     * </pre>
     */
    BOARD(16, 16),
    /**
     * <code>DEV_FRONT_END = 17;</code>
     */
    DEV_FRONT_END(17, 17),
    /**
     * <code>DEV_BACK_END = 18;</code>
     */
    DEV_BACK_END(18, 18),
    /**
     * <code>DEVICE_LOCALITY = 19;</code>
     */
    DEVICE_LOCALITY(19, 19),
    /**
     * <code>RDF_SYSTEM = 20;</code>
     */
    RDF_SYSTEM(20, 20),
    /**
     * <code>RDF_NW_COMPRESSION = 21;</code>
     */
    RDF_NW_COMPRESSION(21, 21),
    /**
     * <code>SPDLMT_GROUP = 22;</code>
     */
    SPDLMT_GROUP(22, 22),
    /**
     * <code>TCP_CONNECTION = 23;</code>
     */
    TCP_CONNECTION(23, 23),
    /**
     * <code>DIR_NETWORK = 24;</code>
     */
    DIR_NETWORK(24, 24),
    /**
     * <code>NW_INTERFACE = 25;</code>
     */
    NW_INTERFACE(25, 25),
    /**
     * <code>ORS_PORT = 26;</code>
     */
    ORS_PORT(26, 26),
    /**
     * <code>ORS_DEVICE = 27;</code>
     */
    ORS_DEVICE(27, 27),
    /**
     * <code>FE_DIR_PORT = 28;</code>
     */
    FE_DIR_PORT(28, 28),
    /**
     * <code>RDF_DIR_PORT = 29;</code>
     */
    RDF_DIR_PORT(29, 29),
    /**
     * <code>BE_DIR_PORT = 30;</code>
     */
    BE_DIR_PORT(30, 30),
    /**
     * <code>EDS_DIR = 31;</code>
     */
    EDS_DIR(31, 31),
    /**
     * <code>CONTAINER_PORT = 32;</code>
     */
    CONTAINER_PORT(32, 32),
    /**
     * <code>GOS = 33;</code>
     */
    GOS(33, 33),
    /**
     * <code>IM_DIR = 34;</code>
     */
    IM_DIR(34, 34),
    /**
     * <code>IM_SLIC = 35;</code>
     */
    IM_SLIC(35, 35),
    /**
     * <code>CORE = 36;</code>
     */
    CORE(36, 36),
    /**
     * <code>CORE_EDS = 37;</code>
     */
    CORE_EDS(37, 37),
    /**
     * <code>CORE_IM = 38;</code>
     */
    CORE_IM(38, 38),
    /**
     * <code>CORE_FE = 39;</code>
     */
    CORE_FE(39, 39),
    /**
     * <code>CORE_BE = 40;</code>
     */
    CORE_BE(40, 40),
    /**
     * <code>CORE_RDF = 41;</code>
     */
    CORE_RDF(41, 41),
    /**
     * <code>CORE_FICON = 42;</code>
     */
    CORE_FICON(42, 42),
    /**
     * <code>ISCSI_CLIENT = 43;</code>
     */
    ISCSI_CLIENT(43, 43),
    /**
     * <code>ISCSI_TARGET = 44;</code>
     */
    ISCSI_TARGET(44, 44),
    /**
     * <code>DISK_GROUP = 45;</code>
     */
    DISK_GROUP(45, 45),
    /**
     * <code>DEV_POOL_ALLOCATIONS = 46;</code>
     */
    DEV_POOL_ALLOCATIONS(46, 46),
    /**
     * <code>INITIATOR = 47;</code>
     */
    INITIATOR(47, 47),
    /**
     * <code>HEADER = 48;</code>
     */
    HEADER(48, 48),
    UNRECOGNIZED(-1, -1),
    ;

    /**
     * <code>ARRAY = 0;</code>
     */
    public static final int ARRAY_VALUE = 0;
    /**
     * <code>DEVICE = 1;</code>
     */
    public static final int DEVICE_VALUE = 1;
    /**
     * <code>FE_DIR = 2;</code>
     */
    public static final int FE_DIR_VALUE = 2;
    /**
     * <code>BE_DIR = 3;</code>
     */
    public static final int BE_DIR_VALUE = 3;
    /**
     * <code>RDF_DIR = 4;</code>
     */
    public static final int RDF_DIR_VALUE = 4;
    /**
     * <code>DISK = 5;</code>
     */
    public static final int DISK_VALUE = 5;
    /**
     * <code>FE_PORT = 6;</code>
     */
    public static final int FE_PORT_VALUE = 6;
    /**
     * <code>CP = 7;</code>
     */
    public static final int CP_VALUE = 7;
    /**
     * <code>RDFA_GRP = 8;</code>
     */
    public static final int RDFA_GRP_VALUE = 8;
    /**
     * <code>RDF_LINK = 9;</code>
     */
    public static final int RDF_LINK_VALUE = 9;
    /**
     * <code>EVENT = 10;</code>
     *
     * <pre>
     *KGKG: DO NOT REMOVE 
     * </pre>
     */
    public static final int EVENT_VALUE = 10;
    /**
     * <code>DEV_POOL = 11;</code>
     *
     * <pre>
     *TAIL;
     * </pre>
     */
    public static final int DEV_POOL_VALUE = 11;
    /**
     * <code>THIN_POOL = 12;</code>
     *
     * <pre>
     * Thin Pool Stats 
     * </pre>
     */
    public static final int THIN_POOL_VALUE = 12;
    /**
     * <code>RDF_DEV = 13;</code>
     */
    public static final int RDF_DEV_VALUE = 13;
    /**
     * <code>DEV_CACH = 14;</code>
     *
     * <pre>
     * Device Host Cache Stats 
     * </pre>
     */
    public static final int DEV_CACH_VALUE = 14;
    /**
     * <code>EXT_DISK = 15;</code>
     */
    public static final int EXT_DISK_VALUE = 15;
    /**
     * <code>BOARD = 16;</code>
     *
     * <pre>
     *CONTAINER;
     * </pre>
     */
    public static final int BOARD_VALUE = 16;
    /**
     * <code>DEV_FRONT_END = 17;</code>
     */
    public static final int DEV_FRONT_END_VALUE = 17;
    /**
     * <code>DEV_BACK_END = 18;</code>
     */
    public static final int DEV_BACK_END_VALUE = 18;
    /**
     * <code>DEVICE_LOCALITY = 19;</code>
     */
    public static final int DEVICE_LOCALITY_VALUE = 19;
    /**
     * <code>RDF_SYSTEM = 20;</code>
     */
    public static final int RDF_SYSTEM_VALUE = 20;
    /**
     * <code>RDF_NW_COMPRESSION = 21;</code>
     */
    public static final int RDF_NW_COMPRESSION_VALUE = 21;
    /**
     * <code>SPDLMT_GROUP = 22;</code>
     */
    public static final int SPDLMT_GROUP_VALUE = 22;
    /**
     * <code>TCP_CONNECTION = 23;</code>
     */
    public static final int TCP_CONNECTION_VALUE = 23;
    /**
     * <code>DIR_NETWORK = 24;</code>
     */
    public static final int DIR_NETWORK_VALUE = 24;
    /**
     * <code>NW_INTERFACE = 25;</code>
     */
    public static final int NW_INTERFACE_VALUE = 25;
    /**
     * <code>ORS_PORT = 26;</code>
     */
    public static final int ORS_PORT_VALUE = 26;
    /**
     * <code>ORS_DEVICE = 27;</code>
     */
    public static final int ORS_DEVICE_VALUE = 27;
    /**
     * <code>FE_DIR_PORT = 28;</code>
     */
    public static final int FE_DIR_PORT_VALUE = 28;
    /**
     * <code>RDF_DIR_PORT = 29;</code>
     */
    public static final int RDF_DIR_PORT_VALUE = 29;
    /**
     * <code>BE_DIR_PORT = 30;</code>
     */
    public static final int BE_DIR_PORT_VALUE = 30;
    /**
     * <code>EDS_DIR = 31;</code>
     */
    public static final int EDS_DIR_VALUE = 31;
    /**
     * <code>CONTAINER_PORT = 32;</code>
     */
    public static final int CONTAINER_PORT_VALUE = 32;
    /**
     * <code>GOS = 33;</code>
     */
    public static final int GOS_VALUE = 33;
    /**
     * <code>IM_DIR = 34;</code>
     */
    public static final int IM_DIR_VALUE = 34;
    /**
     * <code>IM_SLIC = 35;</code>
     */
    public static final int IM_SLIC_VALUE = 35;
    /**
     * <code>CORE = 36;</code>
     */
    public static final int CORE_VALUE = 36;
    /**
     * <code>CORE_EDS = 37;</code>
     */
    public static final int CORE_EDS_VALUE = 37;
    /**
     * <code>CORE_IM = 38;</code>
     */
    public static final int CORE_IM_VALUE = 38;
    /**
     * <code>CORE_FE = 39;</code>
     */
    public static final int CORE_FE_VALUE = 39;
    /**
     * <code>CORE_BE = 40;</code>
     */
    public static final int CORE_BE_VALUE = 40;
    /**
     * <code>CORE_RDF = 41;</code>
     */
    public static final int CORE_RDF_VALUE = 41;
    /**
     * <code>CORE_FICON = 42;</code>
     */
    public static final int CORE_FICON_VALUE = 42;
    /**
     * <code>ISCSI_CLIENT = 43;</code>
     */
    public static final int ISCSI_CLIENT_VALUE = 43;
    /**
     * <code>ISCSI_TARGET = 44;</code>
     */
    public static final int ISCSI_TARGET_VALUE = 44;
    /**
     * <code>DISK_GROUP = 45;</code>
     */
    public static final int DISK_GROUP_VALUE = 45;
    /**
     * <code>DEV_POOL_ALLOCATIONS = 46;</code>
     */
    public static final int DEV_POOL_ALLOCATIONS_VALUE = 46;
    /**
     * <code>INITIATOR = 47;</code>
     */
    public static final int INITIATOR_VALUE = 47;
    /**
     * <code>HEADER = 48;</code>
     */
    public static final int HEADER_VALUE = 48;


    public final int getNumber() {
      if (index == -1) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    public static KPICategory valueOf(int value) {
      switch (value) {
        case 0: return ARRAY;
        case 1: return DEVICE;
        case 2: return FE_DIR;
        case 3: return BE_DIR;
        case 4: return RDF_DIR;
        case 5: return DISK;
        case 6: return FE_PORT;
        case 7: return CP;
        case 8: return RDFA_GRP;
        case 9: return RDF_LINK;
        case 10: return EVENT;
        case 11: return DEV_POOL;
        case 12: return THIN_POOL;
        case 13: return RDF_DEV;
        case 14: return DEV_CACH;
        case 15: return EXT_DISK;
        case 16: return BOARD;
        case 17: return DEV_FRONT_END;
        case 18: return DEV_BACK_END;
        case 19: return DEVICE_LOCALITY;
        case 20: return RDF_SYSTEM;
        case 21: return RDF_NW_COMPRESSION;
        case 22: return SPDLMT_GROUP;
        case 23: return TCP_CONNECTION;
        case 24: return DIR_NETWORK;
        case 25: return NW_INTERFACE;
        case 26: return ORS_PORT;
        case 27: return ORS_DEVICE;
        case 28: return FE_DIR_PORT;
        case 29: return RDF_DIR_PORT;
        case 30: return BE_DIR_PORT;
        case 31: return EDS_DIR;
        case 32: return CONTAINER_PORT;
        case 33: return GOS;
        case 34: return IM_DIR;
        case 35: return IM_SLIC;
        case 36: return CORE;
        case 37: return CORE_EDS;
        case 38: return CORE_IM;
        case 39: return CORE_FE;
        case 40: return CORE_BE;
        case 41: return CORE_RDF;
        case 42: return CORE_FICON;
        case 43: return ISCSI_CLIENT;
        case 44: return ISCSI_TARGET;
        case 45: return DISK_GROUP;
        case 46: return DEV_POOL_ALLOCATIONS;
        case 47: return INITIATOR;
        case 48: return HEADER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<KPICategory>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        KPICategory> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<KPICategory>() {
            public KPICategory findValueByNumber(int number) {
              return KPICategory.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return WorkloadStampsProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final KPICategory[] VALUES = values();

    public static KPICategory valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private KPICategory(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:KPICategory)
  }

  /**
   * Protobuf enum {@code KPIMetric}
   */
  public enum KPIMetric
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>im_dir_memory_page_fall_through_time_total = 0;</code>
     */
    im_dir_memory_page_fall_through_time_total(0, 0),
    /**
     * <code>im_dir_memory_page_usage_total = 1;</code>
     */
    im_dir_memory_page_usage_total(1, 1),
    /**
     * <code>eds_dir_random_read_misses = 2;</code>
     */
    eds_dir_random_read_misses(2, 2),
    /**
     * <code>eds_dir_random_read_misses_kbytes = 3;</code>
     */
    eds_dir_random_read_misses_kbytes(3, 3),
    /**
     * <code>eds_dir_random_write_misses = 4;</code>
     */
    eds_dir_random_write_misses(4, 4),
    /**
     * <code>eds_dir_random_write_misses_kbytes = 5;</code>
     */
    eds_dir_random_write_misses_kbytes(5, 5),
    /**
     * <code>rdfdir_numKbytesRecvd = 6;</code>
     */
    rdfdir_numKbytesRecvd(6, 6),
    /**
     * <code>rdfdir_numKbytesSent = 7;</code>
     */
    rdfdir_numKbytesSent(7, 7),
    /**
     * <code>rdfdir_total_copy_io_count = 8;</code>
     */
    rdfdir_total_copy_io_count(8, 8),
    /**
     * <code>rdfdir_total_copy_io_kbytes = 9;</code>
     */
    rdfdir_total_copy_io_kbytes(9, 9),
    /**
     * <code>rdfdir_total_srdfs_write_count = 10;</code>
     */
    rdfdir_total_srdfs_write_count(10, 10),
    /**
     * <code>core_time_stamp = 11;</code>
     */
    core_time_stamp(11, 11),
    /**
     * <code>core_symmk_idle_time = 12;</code>
     */
    core_symmk_idle_time(12, 12),
    /**
     * <code>core_im_time_stamp = 13;</code>
     */
    core_im_time_stamp(13, 13),
    /**
     * <code>core_im_page_in_time = 14;</code>
     */
    core_im_page_in_time(14, 14),
    /**
     * <code>core_im_page_out_time = 15;</code>
     */
    core_im_page_out_time(15, 15),
    /**
     * <code>core_im_environmental_time = 16;</code>
     */
    core_im_environmental_time(16, 16),
    /**
     * <code>core_im_other_time = 17;</code>
     */
    core_im_other_time(17, 17),
    /**
     * <code>core_im_symmk_total_time = 18;</code>
     */
    core_im_symmk_total_time(18, 18),
    /**
     * <code>core_eds_time_stamp = 19;</code>
     */
    core_eds_time_stamp(19, 19),
    /**
     * <code>core_eds_emulation_time = 20;</code>
     */
    core_eds_emulation_time(20, 20),
    /**
     * <code>core_eds_io_machine_time = 21;</code>
     */
    core_eds_io_machine_time(21, 21),
    /**
     * <code>core_eds_lp_io_machine_time = 22;</code>
     */
    core_eds_lp_io_machine_time(22, 22),
    /**
     * <code>core_eds_housekeeping_time = 23;</code>
     */
    core_eds_housekeeping_time(23, 23),
    /**
     * <code>core_eds_lrep_control_time = 24;</code>
     */
    core_eds_lrep_control_time(24, 24),
    /**
     * <code>core_eds_vp_time = 25;</code>
     */
    core_eds_vp_time(25, 25),
    /**
     * <code>core_eds_copy_scanner_time = 26;</code>
     */
    core_eds_copy_scanner_time(26, 26),
    /**
     * <code>core_eds_pyramid_time = 27;</code>
     */
    core_eds_pyramid_time(27, 27),
    /**
     * <code>core_eds_scan_time = 28;</code>
     */
    core_eds_scan_time(28, 28),
    /**
     * <code>core_eds_snow_spillover_time = 29;</code>
     */
    core_eds_snow_spillover_time(29, 29),
    /**
     * <code>core_eds_remote_replication_time = 30;</code>
     */
    core_eds_remote_replication_time(30, 30),
    /**
     * <code>core_eds_syscalls_time = 31;</code>
     */
    core_eds_syscalls_time(31, 31),
    /**
     * <code>core_eds_watchdog_time = 32;</code>
     */
    core_eds_watchdog_time(32, 32),
    /**
     * <code>core_eds_allocation_split_time = 33;</code>
     */
    core_eds_allocation_split_time(33, 33),
    /**
     * <code>core_eds_fsm_time = 34;</code>
     */
    core_eds_fsm_time(34, 34),
    /**
     * <code>core_eds_symmk_total_time = 35;</code>
     */
    core_eds_symmk_total_time(35, 35),
    /**
     * <code>core_fe_time_stamp = 36;</code>
     */
    core_fe_time_stamp(36, 36),
    /**
     * <code>core_fe_total_reads_time = 37;</code>
     */
    core_fe_total_reads_time(37, 37),
    /**
     * <code>core_fe_total_writes_time = 38;</code>
     */
    core_fe_total_writes_time(38, 38),
    /**
     * <code>core_fe_syscalls_time = 39;</code>
     */
    core_fe_syscalls_time(39, 39),
    /**
     * <code>core_fe_managment_time = 40;</code>
     */
    core_fe_managment_time(40, 40),
    /**
     * <code>core_fe_link_port_time = 41;</code>
     */
    core_fe_link_port_time(41, 41),
    /**
     * <code>core_fe_xrc_replication_time = 42;</code>
     */
    core_fe_xrc_replication_time(42, 42),
    /**
     * <code>core_fe_zhpf_reads_time = 43;</code>
     */
    core_fe_zhpf_reads_time(43, 43),
    /**
     * <code>core_fe_zhpf_writes_time = 44;</code>
     */
    core_fe_zhpf_writes_time(44, 44),
    /**
     * <code>core_fe_odx_vaai_xcopy_time = 45;</code>
     */
    core_fe_odx_vaai_xcopy_time(45, 45),
    /**
     * <code>core_fe_odx_vaai_write_same_time = 46;</code>
     */
    core_fe_odx_vaai_write_same_time(46, 46),
    /**
     * <code>core_fe_odx_vaai_lock_time = 47;</code>
     */
    core_fe_odx_vaai_lock_time(47, 47),
    /**
     * <code>core_fe_cdi_time = 48;</code>
     */
    core_fe_cdi_time(48, 48),
    /**
     * <code>core_fe_lp_task_time = 49;</code>
     */
    core_fe_lp_task_time(49, 49),
    /**
     * <code>core_fe_symmk_total_time = 50;</code>
     */
    core_fe_symmk_total_time(50, 50),
    /**
     * <code>core_be_time_stamp = 51;</code>
     */
    core_be_time_stamp(51, 51),
    /**
     * <code>core_be_total_read_misses_time = 52;</code>
     */
    core_be_total_read_misses_time(52, 52),
    /**
     * <code>core_be_total_writes_time = 53;</code>
     */
    core_be_total_writes_time(53, 53),
    /**
     * <code>core_be_total_prefetch_time = 54;</code>
     */
    core_be_total_prefetch_time(54, 54),
    /**
     * <code>core_be_total_copy_reads_time = 55;</code>
     */
    core_be_total_copy_reads_time(55, 55),
    /**
     * <code>core_be_total_copy_writes_time = 56;</code>
     */
    core_be_total_copy_writes_time(56, 56),
    /**
     * <code>core_be_syscalls_time = 57;</code>
     */
    core_be_syscalls_time(57, 57),
    /**
     * <code>core_be_managment_time = 58;</code>
     */
    core_be_managment_time(58, 58),
    /**
     * <code>core_be_rebuild_time = 59;</code>
     */
    core_be_rebuild_time(59, 59),
    /**
     * <code>core_be_ivtoc_time = 60;</code>
     */
    core_be_ivtoc_time(60, 60),
    /**
     * <code>core_be_software_compression_time = 61;</code>
     */
    core_be_software_compression_time(61, 61),
    /**
     * <code>core_be_other_time = 62;</code>
     */
    core_be_other_time(62, 62),
    /**
     * <code>core_be_cdi_time = 63;</code>
     */
    core_be_cdi_time(63, 63),
    /**
     * <code>core_be_lp_task_time = 64;</code>
     */
    core_be_lp_task_time(64, 64),
    /**
     * <code>core_be_symmk_total_time = 65;</code>
     */
    core_be_symmk_total_time(65, 65),
    /**
     * <code>core_rdf_time_stamp = 66;</code>
     */
    core_rdf_time_stamp(66, 66),
    /**
     * <code>core_rdf_total_reads_time = 67;</code>
     */
    core_rdf_total_reads_time(67, 67),
    /**
     * <code>core_rdf_total_writes_time = 68;</code>
     */
    core_rdf_total_writes_time(68, 68),
    /**
     * <code>core_rdf_total_copy_reads_time = 69;</code>
     */
    core_rdf_total_copy_reads_time(69, 69),
    /**
     * <code>core_rdf_total_copy_writes_time = 70;</code>
     */
    core_rdf_total_copy_writes_time(70, 70),
    /**
     * <code>core_rdf_syscalls_time = 71;</code>
     */
    core_rdf_syscalls_time(71, 71),
    /**
     * <code>core_rdf_other_time = 72;</code>
     */
    core_rdf_other_time(72, 72),
    /**
     * <code>core_rdf_lp_task_time = 73;</code>
     */
    core_rdf_lp_task_time(73, 73),
    /**
     * <code>core_rdf_link_management_time = 74;</code>
     */
    core_rdf_link_management_time(74, 74),
    /**
     * <code>core_rdf_software_compression_time = 75;</code>
     */
    core_rdf_software_compression_time(75, 75),
    /**
     * <code>core_rdf_symmk_total_time = 76;</code>
     */
    core_rdf_symmk_total_time(76, 76),
    /**
     * <code>core_ficon_time_stamp = 77;</code>
     */
    core_ficon_time_stamp(77, 77),
    /**
     * <code>core_ficon_random_read_hits_time = 78;</code>
     */
    core_ficon_random_read_hits_time(78, 78),
    /**
     * <code>core_ficon_random_write_hits_time = 79;</code>
     */
    core_ficon_random_write_hits_time(79, 79),
    /**
     * <code>core_ficon_random_write_misses_time = 80;</code>
     */
    core_ficon_random_write_misses_time(80, 80),
    /**
     * <code>core_ficon_random_read_misses_time = 81;</code>
     */
    core_ficon_random_read_misses_time(81, 81),
    /**
     * <code>core_ficon_total_sequential_reads_time = 82;</code>
     */
    core_ficon_total_sequential_reads_time(82, 82),
    /**
     * <code>core_ficon_total_sequential_writes_time = 83;</code>
     */
    core_ficon_total_sequential_writes_time(83, 83),
    /**
     * <code>core_ficon_syscalls_time = 84;</code>
     */
    core_ficon_syscalls_time(84, 84),
    /**
     * <code>core_ficon_managment_time = 85;</code>
     */
    core_ficon_managment_time(85, 85),
    /**
     * <code>core_ficon_link_port_time = 86;</code>
     */
    core_ficon_link_port_time(86, 86),
    /**
     * <code>core_ficon_xrc_replication_time = 87;</code>
     */
    core_ficon_xrc_replication_time(87, 87),
    /**
     * <code>core_ficon_zhpf_reads_time = 88;</code>
     */
    core_ficon_zhpf_reads_time(88, 88),
    /**
     * <code>core_ficon_zhpf_writes_time = 89;</code>
     */
    core_ficon_zhpf_writes_time(89, 89),
    /**
     * <code>core_ficon_cdi_time = 90;</code>
     */
    core_ficon_cdi_time(90, 90),
    /**
     * <code>core_ficon_lp_task_time = 91;</code>
     */
    core_ficon_lp_task_time(91, 91),
    /**
     * <code>core_ficon_symmk_total_time = 92;</code>
     */
    core_ficon_symmk_total_time(92, 92),
    /**
     * <code>gos_memory_size = 93;</code>
     */
    gos_memory_size(93, 93),
    /**
     * <code>gos_num_cpus = 94;</code>
     */
    gos_num_cpus(94, 94),
    /**
     * <code>rdfagrp_sysWritePendingCount = 95;</code>
     */
    rdfagrp_sysWritePendingCount(95, 95),
    /**
     * <code>rdfagrp_dseTracksUsed = 96;</code>
     */
    rdfagrp_dseTracksUsed(96, 96),
    /**
     * <code>rdfagrp_hostWriteNumIoReq = 97;</code>
     */
    rdfagrp_hostWriteNumIoReq(97, 97),
    /**
     * <code>rdfagrp_hostWriteNumMbytes = 98;</code>
     */
    rdfagrp_hostWriteNumMbytes(98, 98),
    /**
     * <code>bedir_numIoReq = 99;</code>
     */
    bedir_numIoReq(99, 99),
    /**
     * <code>bedir_dirUtilization = 100;</code>
     */
    bedir_dirUtilization(100, 100),
    /**
     * <code>bedir_compress_reads = 101;</code>
     */
    bedir_compress_reads(101, 101),
    /**
     * <code>bedir_compress_read_kbytes = 102;</code>
     */
    bedir_compress_read_kbytes(102, 102),
    /**
     * <code>bedir_compress_writes = 103;</code>
     */
    bedir_compress_writes(103, 103),
    /**
     * <code>bedir_compress_write_kbytes = 104;</code>
     */
    bedir_compress_write_kbytes(104, 104),
    /**
     * <code>fe_dir_port_port_derived_ios_count = 105;</code>
     */
    fe_dir_port_port_derived_ios_count(105, 105),
    /**
     * <code>fe_dir_port_port_derived_total_thruput_kbytes = 106;</code>
     */
    fe_dir_port_port_derived_total_thruput_kbytes(106, 106),
    /**
     * <code>fe_dir_port_port_read_count = 107;</code>
     */
    fe_dir_port_port_read_count(107, 107),
    /**
     * <code>fe_dir_port_port_write_count = 108;</code>
     */
    fe_dir_port_port_write_count(108, 108),
    /**
     * <code>fe_dir_port_port_read_thruput_kbytes = 109;</code>
     */
    fe_dir_port_port_read_thruput_kbytes(109, 109),
    /**
     * <code>fe_dir_port_port_write_thruput_kbytes = 110;</code>
     */
    fe_dir_port_port_write_thruput_kbytes(110, 110),
    /**
     * <code>fe_dir_port_port_speed = 111;</code>
     */
    fe_dir_port_port_speed(111, 111),
    /**
     * <code>fe_dir_port_negotiated_speed = 112;</code>
     */
    fe_dir_port_negotiated_speed(112, 112),
    /**
     * <code>fedir_accumQueueDepthRange0 = 113;</code>
     */
    fedir_accumQueueDepthRange0(113, 113),
    /**
     * <code>fedir_accumQueueDepthRange5 = 114;</code>
     */
    fedir_accumQueueDepthRange5(114, 114),
    /**
     * <code>fedir_accumQueueDepthRange10 = 115;</code>
     */
    fedir_accumQueueDepthRange10(115, 115),
    /**
     * <code>fedir_accumQueueDepthRange20 = 116;</code>
     */
    fedir_accumQueueDepthRange20(116, 116),
    /**
     * <code>fedir_accumQueueDepthRange40 = 117;</code>
     */
    fedir_accumQueueDepthRange40(117, 117),
    /**
     * <code>fedir_accumQueueDepthRange80 = 118;</code>
     */
    fedir_accumQueueDepthRange80(118, 118),
    /**
     * <code>fedir_accumQueueDepthRange160 = 119;</code>
     */
    fedir_accumQueueDepthRange160(119, 119),
    /**
     * <code>fedir_accumQueueDepthRange320 = 120;</code>
     */
    fedir_accumQueueDepthRange320(120, 120),
    /**
     * <code>fedir_accumQueueDepthRange640 = 121;</code>
     */
    fedir_accumQueueDepthRange640(121, 121),
    /**
     * <code>fedir_accumQueueDepthRangeOver640 = 122;</code>
     */
    fedir_accumQueueDepthRangeOver640(122, 122),
    /**
     * <code>fedir_queueDepthCountRange0 = 123;</code>
     */
    fedir_queueDepthCountRange0(123, 123),
    /**
     * <code>fedir_queueDepthCountRange5 = 124;</code>
     */
    fedir_queueDepthCountRange5(124, 124),
    /**
     * <code>fedir_queueDepthCountRange10 = 125;</code>
     */
    fedir_queueDepthCountRange10(125, 125),
    /**
     * <code>fedir_queueDepthCountRange20 = 126;</code>
     */
    fedir_queueDepthCountRange20(126, 126),
    /**
     * <code>fedir_queueDepthCountRange40 = 127;</code>
     */
    fedir_queueDepthCountRange40(127, 127),
    /**
     * <code>fedir_queueDepthCountRange80 = 128;</code>
     */
    fedir_queueDepthCountRange80(128, 128),
    /**
     * <code>fedir_queueDepthCountRange160 = 129;</code>
     */
    fedir_queueDepthCountRange160(129, 129),
    /**
     * <code>fedir_queueDepthCountRange320 = 130;</code>
     */
    fedir_queueDepthCountRange320(130, 130),
    /**
     * <code>fedir_queueDepthCountRange640 = 131;</code>
     */
    fedir_queueDepthCountRange640(131, 131),
    /**
     * <code>fedir_queueDepthCountRangeOver640 = 132;</code>
     */
    fedir_queueDepthCountRangeOver640(132, 132),
    /**
     * <code>fedir_read_resp_time_count0 = 133;</code>
     */
    fedir_read_resp_time_count0(133, 133),
    /**
     * <code>fedir_read_resp_time_count1 = 134;</code>
     */
    fedir_read_resp_time_count1(134, 134),
    /**
     * <code>fedir_read_resp_time_count2 = 135;</code>
     */
    fedir_read_resp_time_count2(135, 135),
    /**
     * <code>fedir_read_resp_time_count3 = 136;</code>
     */
    fedir_read_resp_time_count3(136, 136),
    /**
     * <code>fedir_read_resp_time_count4 = 137;</code>
     */
    fedir_read_resp_time_count4(137, 137),
    /**
     * <code>fedir_read_resp_time_count5 = 138;</code>
     */
    fedir_read_resp_time_count5(138, 138),
    /**
     * <code>fedir_read_resp_time_count6 = 139;</code>
     */
    fedir_read_resp_time_count6(139, 139),
    /**
     * <code>fedir_read_resp_time_count7 = 140;</code>
     */
    fedir_read_resp_time_count7(140, 140),
    /**
     * <code>fedir_write_resp_time_count0 = 141;</code>
     */
    fedir_write_resp_time_count0(141, 141),
    /**
     * <code>fedir_write_resp_time_count1 = 142;</code>
     */
    fedir_write_resp_time_count1(142, 142),
    /**
     * <code>fedir_write_resp_time_count2 = 143;</code>
     */
    fedir_write_resp_time_count2(143, 143),
    /**
     * <code>fedir_write_resp_time_count3 = 144;</code>
     */
    fedir_write_resp_time_count3(144, 144),
    /**
     * <code>fedir_write_resp_time_count4 = 145;</code>
     */
    fedir_write_resp_time_count4(145, 145),
    /**
     * <code>fedir_write_resp_time_count5 = 146;</code>
     */
    fedir_write_resp_time_count5(146, 146),
    /**
     * <code>fedir_write_resp_time_count6 = 147;</code>
     */
    fedir_write_resp_time_count6(147, 147),
    /**
     * <code>fedir_write_resp_time_count7 = 148;</code>
     */
    fedir_write_resp_time_count7(148, 148),
    /**
     * <code>fedir_numIoReq = 149;</code>
     */
    fedir_numIoReq(149, 149),
    /**
     * <code>fedir_derived_avg_queue_depth_range = 150;</code>
     */
    fedir_derived_avg_queue_depth_range(150, 150),
    /**
     * <code>fedir_queueDepthCountRange = 151;</code>
     */
    fedir_queueDepthCountRange(151, 151),
    /**
     * <code>fedir_read_resp_time_count = 152;</code>
     */
    fedir_read_resp_time_count(152, 152),
    /**
     * <code>fedir_write_resp_time_count = 153;</code>
     */
    fedir_write_resp_time_count(153, 153),
    /**
     * <code>fedir_derived_avg_read_time_ms = 154;</code>
     */
    fedir_derived_avg_read_time_ms(154, 154),
    /**
     * <code>fedir_derived_avg_write_time_ms = 155;</code>
     */
    fedir_derived_avg_write_time_ms(155, 155),
    /**
     * <code>fedir_dirUtilization = 156;</code>
     */
    fedir_dirUtilization(156, 156),
    /**
     * <code>fedir_total_syscall_time = 157;</code>
     */
    fedir_total_syscall_time(157, 157),
    /**
     * <code>fedir_derived_avg_queue_depth_range0 = 158;</code>
     */
    fedir_derived_avg_queue_depth_range0(158, 158),
    /**
     * <code>fedir_derived_avg_queue_depth_range5 = 159;</code>
     */
    fedir_derived_avg_queue_depth_range5(159, 159),
    /**
     * <code>fedir_derived_avg_queue_depth_range10 = 160;</code>
     */
    fedir_derived_avg_queue_depth_range10(160, 160),
    /**
     * <code>fedir_derived_avg_queue_depth_range20 = 161;</code>
     */
    fedir_derived_avg_queue_depth_range20(161, 161),
    /**
     * <code>fedir_derived_avg_queue_depth_range40 = 162;</code>
     */
    fedir_derived_avg_queue_depth_range40(162, 162),
    /**
     * <code>fedir_derived_avg_queue_depth_range80 = 163;</code>
     */
    fedir_derived_avg_queue_depth_range80(163, 163),
    /**
     * <code>fedir_derived_avg_queue_depth_range160 = 164;</code>
     */
    fedir_derived_avg_queue_depth_range160(164, 164),
    /**
     * <code>fedir_derived_avg_queue_depth_range320 = 165;</code>
     */
    fedir_derived_avg_queue_depth_range320(165, 165),
    /**
     * <code>fedir_derived_avg_queue_depth_range640 = 166;</code>
     */
    fedir_derived_avg_queue_depth_range640(166, 166),
    /**
     * <code>fedir_derived_avg_queue_depth_rangeOver640 = 167;</code>
     */
    fedir_derived_avg_queue_depth_rangeOver640(167, 167),
    /**
     * <code>array_cacheTrackSize = 168;</code>
     */
    array_cacheTrackSize(168, 168),
    /**
     * <code>array_numKbytesRead = 169;</code>
     */
    array_numKbytesRead(169, 169),
    /**
     * <code>array_numKbytesWritten = 170;</code>
     */
    array_numKbytesWritten(170, 170),
    /**
     * <code>array_numWritePendingTracks = 171;</code>
     */
    array_numWritePendingTracks(171, 171),
    /**
     * <code>array_numHits = 172;</code>
     */
    array_numHits(172, 172),
    /**
     * <code>array_numReadHits = 173;</code>
     */
    array_numReadHits(173, 173),
    /**
     * <code>array_numReadReq = 174;</code>
     */
    array_numReadReq(174, 174),
    /**
     * <code>array_numWriteReq = 175;</code>
     */
    array_numWriteReq(175, 175),
    /**
     * <code>array_sysMaxWpLimit = 176;</code>
     */
    array_sysMaxWpLimit(176, 176),
    /**
     * <code>array_numIoReq = 177;</code>
     */
    array_numIoReq(177, 177),
    /**
     * <code>disk_totalScsiCommands = 178;</code>
     */
    disk_totalScsiCommands(178, 178),
    /**
     * <code>disk_readCommands = 179;</code>
     */
    disk_readCommands(179, 179),
    /**
     * <code>disk_writeCommands = 180;</code>
     */
    disk_writeCommands(180, 180),
    /**
     * <code>disk_numSkipMaskCommands = 181;</code>
     */
    disk_numSkipMaskCommands(181, 181),
    /**
     * <code>disk_numXorWriteCommands = 182;</code>
     */
    disk_numXorWriteCommands(182, 182),
    /**
     * <code>disk_derived_xor_write_read_commands_per_sec = 183;</code>
     */
    disk_derived_xor_write_read_commands_per_sec(183, 183),
    /**
     * <code>disk_numXorReadCommands = 184;</code>
     */
    disk_numXorReadCommands(184, 184),
    /**
     * <code>disk_numKbytesWritten = 185;</code>
     */
    disk_numKbytesWritten(185, 185),
    /**
     * <code>disk_derived_avg_kbytes_per_write = 186;</code>
     */
    disk_derived_avg_kbytes_per_write(186, 186),
    /**
     * <code>disk_numKbytesRead = 187;</code>
     */
    disk_numKbytesRead(187, 187),
    /**
     * <code>disk_derived_avg_kbytes_per_read = 188;</code>
     */
    disk_derived_avg_kbytes_per_read(188, 188),
    /**
     * <code>disk_derived_avg_read_time_ms = 189;</code>
     */
    disk_derived_avg_read_time_ms(189, 189),
    /**
     * <code>disk_derived_avg_write_time_ms = 190;</code>
     */
    disk_derived_avg_write_time_ms(190, 190),
    /**
     * <code>disk_totalReadTime = 191;</code>
     */
    disk_totalReadTime(191, 191),
    /**
     * <code>disk_totalWriteTime = 192;</code>
     */
    disk_totalWriteTime(192, 192),
    /**
     * <code>dev_front_end_derived_total_ios_per_sec = 193;</code>
     */
    dev_front_end_derived_total_ios_per_sec(193, 193),
    /**
     * <code>dev_front_end_derived_total_reads_per_sec = 194;</code>
     */
    dev_front_end_derived_total_reads_per_sec(194, 194),
    /**
     * <code>dev_front_end_num_seq_read_reqs = 195;</code>
     */
    dev_front_end_num_seq_read_reqs(195, 195),
    /**
     * <code>dev_front_end_num_seq_write_reqs = 196;</code>
     */
    dev_front_end_num_seq_write_reqs(196, 196),
    /**
     * <code>dev_front_end_derived_kbytes_read_per_sec = 197;</code>
     */
    dev_front_end_derived_kbytes_read_per_sec(197, 197),
    /**
     * <code>dev_front_end_derived_kbytes_written_per_sec = 198;</code>
     */
    dev_front_end_derived_kbytes_written_per_sec(198, 198),
    /**
     * <code>dev_front_end_derived_avg_read_size_in_kbytes = 199;</code>
     */
    dev_front_end_derived_avg_read_size_in_kbytes(199, 199),
    /**
     * <code>dev_front_end_derived_avg_write_size_in_kbytes = 200;</code>
     */
    dev_front_end_derived_avg_write_size_in_kbytes(200, 200),
    /**
     * <code>dev_front_end_num_wp_tracks = 201;</code>
     */
    dev_front_end_num_wp_tracks(201, 201),
    /**
     * <code>dev_front_end_device_max_wp_limit = 202;</code>
     */
    dev_front_end_device_max_wp_limit(202, 202),
    /**
     * <code>dev_front_end_derived_sampled_avg_read_time = 203;</code>
     */
    dev_front_end_derived_sampled_avg_read_time(203, 203),
    /**
     * <code>dev_front_end_derived_sampled_avg_write_time = 204;</code>
     */
    dev_front_end_derived_sampled_avg_write_time(204, 204),
    /**
     * <code>dev_front_end_crm_reads = 205;</code>
     */
    dev_front_end_crm_reads(205, 205),
    /**
     * <code>dev_front_end_crm_reads_kbytes = 206;</code>
     */
    dev_front_end_crm_reads_kbytes(206, 206),
    /**
     * <code>dev_front_end_num_random_read_reqs = 207;</code>
     */
    dev_front_end_num_random_read_reqs(207, 207),
    /**
     * <code>dev_front_end_num_random_write_reqs = 208;</code>
     */
    dev_front_end_num_random_write_reqs(208, 208),
    /**
     * <code>dev_front_end_num_random_read_hits = 209;</code>
     */
    dev_front_end_num_random_read_hits(209, 209),
    /**
     * <code>dev_front_end_num_random_write_hits = 210;</code>
     */
    dev_front_end_num_random_write_hits(210, 210),
    /**
     * <code>dev_front_end_derived_total_write_misses_per_sec = 211;</code>
     */
    dev_front_end_derived_total_write_misses_per_sec(211, 211),
    /**
     * <code>dev_front_end_kbytes_read = 212;</code>
     */
    dev_front_end_kbytes_read(212, 212),
    /**
     * <code>dev_front_end_kbytes_written = 213;</code>
     */
    dev_front_end_kbytes_written(213, 213),
    /**
     * <code>dev_front_end_device_block_size = 214;</code>
     */
    dev_front_end_device_block_size(214, 214),
    /**
     * <code>dev_front_end_total_read_time = 215;</code>
     */
    dev_front_end_total_read_time(215, 215),
    /**
     * <code>dev_front_end_total_write_time = 216;</code>
     */
    dev_front_end_total_write_time(216, 216),
    /**
     * <code>dev_back_end_num_wp_tracks = 217;</code>
     */
    dev_back_end_num_wp_tracks(217, 217),
    /**
     * <code>dev_back_end_num_write_reqs = 218;</code>
     */
    dev_back_end_num_write_reqs(218, 218),
    /**
     * <code>dev_back_end_num_pf_tracks = 219;</code>
     */
    dev_back_end_num_pf_tracks(219, 219),
    /**
     * <code>dev_back_end_num_read_reqs = 220;</code>
     */
    dev_back_end_num_read_reqs(220, 220),
    /**
     * <code>dev_back_end_derived_da_kbytes_read_per_sec = 221;</code>
     */
    dev_back_end_derived_da_kbytes_read_per_sec(221, 221),
    /**
     * <code>dev_back_end_derived_da_kbytes_written_per_sec = 222;</code>
     */
    dev_back_end_derived_da_kbytes_written_per_sec(222, 222),
    /**
     * <code>dev_back_end_num_blocks_written = 223;</code>
     */
    dev_back_end_num_blocks_written(223, 223),
    /**
     * <code>dev_back_end_num_blocks_read = 224;</code>
     */
    dev_back_end_num_blocks_read(224, 224),
    /**
     * <code>dev_back_end_device_block_size = 225;</code>
     */
    dev_back_end_device_block_size(225, 225),
    /**
     * <code>rdfdevice_total_reads = 226;</code>
     */
    rdfdevice_total_reads(226, 226),
    /**
     * <code>rdfdevice_total_writes = 227;</code>
     */
    rdfdevice_total_writes(227, 227),
    /**
     * <code>rdfdevice_bytes_read_kb = 228;</code>
     */
    rdfdevice_bytes_read_kb(228, 228),
    /**
     * <code>rdfdevice_bytes_written_kb = 229;</code>
     */
    rdfdevice_bytes_written_kb(229, 229),
    /**
     * <code>devicepool_allocatedTracksPerPool = 230;</code>
     */
    devicepool_allocatedTracksPerPool(230, 230),
    /**
     * <code>devicepool_destageWrite = 231;</code>
     */
    devicepool_destageWrite(231, 231),
    /**
     * <code>devicepool_destageWriteKb = 232;</code>
     */
    devicepool_destageWriteKb(232, 232),
    /**
     * <code>devicepool_prefetchKb = 233;</code>
     */
    devicepool_prefetchKb(233, 233),
    /**
     * <code>devicepool_prefetch = 234;</code>
     */
    devicepool_prefetch(234, 234),
    /**
     * <code>devicepool_randomReadMissKb = 235;</code>
     */
    devicepool_randomReadMissKb(235, 235),
    /**
     * <code>devicepool_randomReadMiss = 236;</code>
     */
    devicepool_randomReadMiss(236, 236),
    /**
     * <code>devicepool_compressedTracksPerPool = 237;</code>
     */
    devicepool_compressedTracksPerPool(237, 237),
    /**
     * <code>thinpool_total_enabled_tracks_64 = 238;</code>
     */
    thinpool_total_enabled_tracks_64(238, 238),
    /**
     * <code>thinpool_fast_egress_counter = 239;</code>
     */
    thinpool_fast_egress_counter(239, 239),
    /**
     * <code>thinpool_total_free_tracks_64 = 240;</code>
     */
    thinpool_total_free_tracks_64(240, 240),
    /**
     * <code>thinpool_total_used_tracks_64 = 241;</code>
     */
    thinpool_total_used_tracks_64(241, 241),
    UNRECOGNIZED(-1, -1),
    ;

    /**
     * <code>im_dir_memory_page_fall_through_time_total = 0;</code>
     */
    public static final int im_dir_memory_page_fall_through_time_total_VALUE = 0;
    /**
     * <code>im_dir_memory_page_usage_total = 1;</code>
     */
    public static final int im_dir_memory_page_usage_total_VALUE = 1;
    /**
     * <code>eds_dir_random_read_misses = 2;</code>
     */
    public static final int eds_dir_random_read_misses_VALUE = 2;
    /**
     * <code>eds_dir_random_read_misses_kbytes = 3;</code>
     */
    public static final int eds_dir_random_read_misses_kbytes_VALUE = 3;
    /**
     * <code>eds_dir_random_write_misses = 4;</code>
     */
    public static final int eds_dir_random_write_misses_VALUE = 4;
    /**
     * <code>eds_dir_random_write_misses_kbytes = 5;</code>
     */
    public static final int eds_dir_random_write_misses_kbytes_VALUE = 5;
    /**
     * <code>rdfdir_numKbytesRecvd = 6;</code>
     */
    public static final int rdfdir_numKbytesRecvd_VALUE = 6;
    /**
     * <code>rdfdir_numKbytesSent = 7;</code>
     */
    public static final int rdfdir_numKbytesSent_VALUE = 7;
    /**
     * <code>rdfdir_total_copy_io_count = 8;</code>
     */
    public static final int rdfdir_total_copy_io_count_VALUE = 8;
    /**
     * <code>rdfdir_total_copy_io_kbytes = 9;</code>
     */
    public static final int rdfdir_total_copy_io_kbytes_VALUE = 9;
    /**
     * <code>rdfdir_total_srdfs_write_count = 10;</code>
     */
    public static final int rdfdir_total_srdfs_write_count_VALUE = 10;
    /**
     * <code>core_time_stamp = 11;</code>
     */
    public static final int core_time_stamp_VALUE = 11;
    /**
     * <code>core_symmk_idle_time = 12;</code>
     */
    public static final int core_symmk_idle_time_VALUE = 12;
    /**
     * <code>core_im_time_stamp = 13;</code>
     */
    public static final int core_im_time_stamp_VALUE = 13;
    /**
     * <code>core_im_page_in_time = 14;</code>
     */
    public static final int core_im_page_in_time_VALUE = 14;
    /**
     * <code>core_im_page_out_time = 15;</code>
     */
    public static final int core_im_page_out_time_VALUE = 15;
    /**
     * <code>core_im_environmental_time = 16;</code>
     */
    public static final int core_im_environmental_time_VALUE = 16;
    /**
     * <code>core_im_other_time = 17;</code>
     */
    public static final int core_im_other_time_VALUE = 17;
    /**
     * <code>core_im_symmk_total_time = 18;</code>
     */
    public static final int core_im_symmk_total_time_VALUE = 18;
    /**
     * <code>core_eds_time_stamp = 19;</code>
     */
    public static final int core_eds_time_stamp_VALUE = 19;
    /**
     * <code>core_eds_emulation_time = 20;</code>
     */
    public static final int core_eds_emulation_time_VALUE = 20;
    /**
     * <code>core_eds_io_machine_time = 21;</code>
     */
    public static final int core_eds_io_machine_time_VALUE = 21;
    /**
     * <code>core_eds_lp_io_machine_time = 22;</code>
     */
    public static final int core_eds_lp_io_machine_time_VALUE = 22;
    /**
     * <code>core_eds_housekeeping_time = 23;</code>
     */
    public static final int core_eds_housekeeping_time_VALUE = 23;
    /**
     * <code>core_eds_lrep_control_time = 24;</code>
     */
    public static final int core_eds_lrep_control_time_VALUE = 24;
    /**
     * <code>core_eds_vp_time = 25;</code>
     */
    public static final int core_eds_vp_time_VALUE = 25;
    /**
     * <code>core_eds_copy_scanner_time = 26;</code>
     */
    public static final int core_eds_copy_scanner_time_VALUE = 26;
    /**
     * <code>core_eds_pyramid_time = 27;</code>
     */
    public static final int core_eds_pyramid_time_VALUE = 27;
    /**
     * <code>core_eds_scan_time = 28;</code>
     */
    public static final int core_eds_scan_time_VALUE = 28;
    /**
     * <code>core_eds_snow_spillover_time = 29;</code>
     */
    public static final int core_eds_snow_spillover_time_VALUE = 29;
    /**
     * <code>core_eds_remote_replication_time = 30;</code>
     */
    public static final int core_eds_remote_replication_time_VALUE = 30;
    /**
     * <code>core_eds_syscalls_time = 31;</code>
     */
    public static final int core_eds_syscalls_time_VALUE = 31;
    /**
     * <code>core_eds_watchdog_time = 32;</code>
     */
    public static final int core_eds_watchdog_time_VALUE = 32;
    /**
     * <code>core_eds_allocation_split_time = 33;</code>
     */
    public static final int core_eds_allocation_split_time_VALUE = 33;
    /**
     * <code>core_eds_fsm_time = 34;</code>
     */
    public static final int core_eds_fsm_time_VALUE = 34;
    /**
     * <code>core_eds_symmk_total_time = 35;</code>
     */
    public static final int core_eds_symmk_total_time_VALUE = 35;
    /**
     * <code>core_fe_time_stamp = 36;</code>
     */
    public static final int core_fe_time_stamp_VALUE = 36;
    /**
     * <code>core_fe_total_reads_time = 37;</code>
     */
    public static final int core_fe_total_reads_time_VALUE = 37;
    /**
     * <code>core_fe_total_writes_time = 38;</code>
     */
    public static final int core_fe_total_writes_time_VALUE = 38;
    /**
     * <code>core_fe_syscalls_time = 39;</code>
     */
    public static final int core_fe_syscalls_time_VALUE = 39;
    /**
     * <code>core_fe_managment_time = 40;</code>
     */
    public static final int core_fe_managment_time_VALUE = 40;
    /**
     * <code>core_fe_link_port_time = 41;</code>
     */
    public static final int core_fe_link_port_time_VALUE = 41;
    /**
     * <code>core_fe_xrc_replication_time = 42;</code>
     */
    public static final int core_fe_xrc_replication_time_VALUE = 42;
    /**
     * <code>core_fe_zhpf_reads_time = 43;</code>
     */
    public static final int core_fe_zhpf_reads_time_VALUE = 43;
    /**
     * <code>core_fe_zhpf_writes_time = 44;</code>
     */
    public static final int core_fe_zhpf_writes_time_VALUE = 44;
    /**
     * <code>core_fe_odx_vaai_xcopy_time = 45;</code>
     */
    public static final int core_fe_odx_vaai_xcopy_time_VALUE = 45;
    /**
     * <code>core_fe_odx_vaai_write_same_time = 46;</code>
     */
    public static final int core_fe_odx_vaai_write_same_time_VALUE = 46;
    /**
     * <code>core_fe_odx_vaai_lock_time = 47;</code>
     */
    public static final int core_fe_odx_vaai_lock_time_VALUE = 47;
    /**
     * <code>core_fe_cdi_time = 48;</code>
     */
    public static final int core_fe_cdi_time_VALUE = 48;
    /**
     * <code>core_fe_lp_task_time = 49;</code>
     */
    public static final int core_fe_lp_task_time_VALUE = 49;
    /**
     * <code>core_fe_symmk_total_time = 50;</code>
     */
    public static final int core_fe_symmk_total_time_VALUE = 50;
    /**
     * <code>core_be_time_stamp = 51;</code>
     */
    public static final int core_be_time_stamp_VALUE = 51;
    /**
     * <code>core_be_total_read_misses_time = 52;</code>
     */
    public static final int core_be_total_read_misses_time_VALUE = 52;
    /**
     * <code>core_be_total_writes_time = 53;</code>
     */
    public static final int core_be_total_writes_time_VALUE = 53;
    /**
     * <code>core_be_total_prefetch_time = 54;</code>
     */
    public static final int core_be_total_prefetch_time_VALUE = 54;
    /**
     * <code>core_be_total_copy_reads_time = 55;</code>
     */
    public static final int core_be_total_copy_reads_time_VALUE = 55;
    /**
     * <code>core_be_total_copy_writes_time = 56;</code>
     */
    public static final int core_be_total_copy_writes_time_VALUE = 56;
    /**
     * <code>core_be_syscalls_time = 57;</code>
     */
    public static final int core_be_syscalls_time_VALUE = 57;
    /**
     * <code>core_be_managment_time = 58;</code>
     */
    public static final int core_be_managment_time_VALUE = 58;
    /**
     * <code>core_be_rebuild_time = 59;</code>
     */
    public static final int core_be_rebuild_time_VALUE = 59;
    /**
     * <code>core_be_ivtoc_time = 60;</code>
     */
    public static final int core_be_ivtoc_time_VALUE = 60;
    /**
     * <code>core_be_software_compression_time = 61;</code>
     */
    public static final int core_be_software_compression_time_VALUE = 61;
    /**
     * <code>core_be_other_time = 62;</code>
     */
    public static final int core_be_other_time_VALUE = 62;
    /**
     * <code>core_be_cdi_time = 63;</code>
     */
    public static final int core_be_cdi_time_VALUE = 63;
    /**
     * <code>core_be_lp_task_time = 64;</code>
     */
    public static final int core_be_lp_task_time_VALUE = 64;
    /**
     * <code>core_be_symmk_total_time = 65;</code>
     */
    public static final int core_be_symmk_total_time_VALUE = 65;
    /**
     * <code>core_rdf_time_stamp = 66;</code>
     */
    public static final int core_rdf_time_stamp_VALUE = 66;
    /**
     * <code>core_rdf_total_reads_time = 67;</code>
     */
    public static final int core_rdf_total_reads_time_VALUE = 67;
    /**
     * <code>core_rdf_total_writes_time = 68;</code>
     */
    public static final int core_rdf_total_writes_time_VALUE = 68;
    /**
     * <code>core_rdf_total_copy_reads_time = 69;</code>
     */
    public static final int core_rdf_total_copy_reads_time_VALUE = 69;
    /**
     * <code>core_rdf_total_copy_writes_time = 70;</code>
     */
    public static final int core_rdf_total_copy_writes_time_VALUE = 70;
    /**
     * <code>core_rdf_syscalls_time = 71;</code>
     */
    public static final int core_rdf_syscalls_time_VALUE = 71;
    /**
     * <code>core_rdf_other_time = 72;</code>
     */
    public static final int core_rdf_other_time_VALUE = 72;
    /**
     * <code>core_rdf_lp_task_time = 73;</code>
     */
    public static final int core_rdf_lp_task_time_VALUE = 73;
    /**
     * <code>core_rdf_link_management_time = 74;</code>
     */
    public static final int core_rdf_link_management_time_VALUE = 74;
    /**
     * <code>core_rdf_software_compression_time = 75;</code>
     */
    public static final int core_rdf_software_compression_time_VALUE = 75;
    /**
     * <code>core_rdf_symmk_total_time = 76;</code>
     */
    public static final int core_rdf_symmk_total_time_VALUE = 76;
    /**
     * <code>core_ficon_time_stamp = 77;</code>
     */
    public static final int core_ficon_time_stamp_VALUE = 77;
    /**
     * <code>core_ficon_random_read_hits_time = 78;</code>
     */
    public static final int core_ficon_random_read_hits_time_VALUE = 78;
    /**
     * <code>core_ficon_random_write_hits_time = 79;</code>
     */
    public static final int core_ficon_random_write_hits_time_VALUE = 79;
    /**
     * <code>core_ficon_random_write_misses_time = 80;</code>
     */
    public static final int core_ficon_random_write_misses_time_VALUE = 80;
    /**
     * <code>core_ficon_random_read_misses_time = 81;</code>
     */
    public static final int core_ficon_random_read_misses_time_VALUE = 81;
    /**
     * <code>core_ficon_total_sequential_reads_time = 82;</code>
     */
    public static final int core_ficon_total_sequential_reads_time_VALUE = 82;
    /**
     * <code>core_ficon_total_sequential_writes_time = 83;</code>
     */
    public static final int core_ficon_total_sequential_writes_time_VALUE = 83;
    /**
     * <code>core_ficon_syscalls_time = 84;</code>
     */
    public static final int core_ficon_syscalls_time_VALUE = 84;
    /**
     * <code>core_ficon_managment_time = 85;</code>
     */
    public static final int core_ficon_managment_time_VALUE = 85;
    /**
     * <code>core_ficon_link_port_time = 86;</code>
     */
    public static final int core_ficon_link_port_time_VALUE = 86;
    /**
     * <code>core_ficon_xrc_replication_time = 87;</code>
     */
    public static final int core_ficon_xrc_replication_time_VALUE = 87;
    /**
     * <code>core_ficon_zhpf_reads_time = 88;</code>
     */
    public static final int core_ficon_zhpf_reads_time_VALUE = 88;
    /**
     * <code>core_ficon_zhpf_writes_time = 89;</code>
     */
    public static final int core_ficon_zhpf_writes_time_VALUE = 89;
    /**
     * <code>core_ficon_cdi_time = 90;</code>
     */
    public static final int core_ficon_cdi_time_VALUE = 90;
    /**
     * <code>core_ficon_lp_task_time = 91;</code>
     */
    public static final int core_ficon_lp_task_time_VALUE = 91;
    /**
     * <code>core_ficon_symmk_total_time = 92;</code>
     */
    public static final int core_ficon_symmk_total_time_VALUE = 92;
    /**
     * <code>gos_memory_size = 93;</code>
     */
    public static final int gos_memory_size_VALUE = 93;
    /**
     * <code>gos_num_cpus = 94;</code>
     */
    public static final int gos_num_cpus_VALUE = 94;
    /**
     * <code>rdfagrp_sysWritePendingCount = 95;</code>
     */
    public static final int rdfagrp_sysWritePendingCount_VALUE = 95;
    /**
     * <code>rdfagrp_dseTracksUsed = 96;</code>
     */
    public static final int rdfagrp_dseTracksUsed_VALUE = 96;
    /**
     * <code>rdfagrp_hostWriteNumIoReq = 97;</code>
     */
    public static final int rdfagrp_hostWriteNumIoReq_VALUE = 97;
    /**
     * <code>rdfagrp_hostWriteNumMbytes = 98;</code>
     */
    public static final int rdfagrp_hostWriteNumMbytes_VALUE = 98;
    /**
     * <code>bedir_numIoReq = 99;</code>
     */
    public static final int bedir_numIoReq_VALUE = 99;
    /**
     * <code>bedir_dirUtilization = 100;</code>
     */
    public static final int bedir_dirUtilization_VALUE = 100;
    /**
     * <code>bedir_compress_reads = 101;</code>
     */
    public static final int bedir_compress_reads_VALUE = 101;
    /**
     * <code>bedir_compress_read_kbytes = 102;</code>
     */
    public static final int bedir_compress_read_kbytes_VALUE = 102;
    /**
     * <code>bedir_compress_writes = 103;</code>
     */
    public static final int bedir_compress_writes_VALUE = 103;
    /**
     * <code>bedir_compress_write_kbytes = 104;</code>
     */
    public static final int bedir_compress_write_kbytes_VALUE = 104;
    /**
     * <code>fe_dir_port_port_derived_ios_count = 105;</code>
     */
    public static final int fe_dir_port_port_derived_ios_count_VALUE = 105;
    /**
     * <code>fe_dir_port_port_derived_total_thruput_kbytes = 106;</code>
     */
    public static final int fe_dir_port_port_derived_total_thruput_kbytes_VALUE = 106;
    /**
     * <code>fe_dir_port_port_read_count = 107;</code>
     */
    public static final int fe_dir_port_port_read_count_VALUE = 107;
    /**
     * <code>fe_dir_port_port_write_count = 108;</code>
     */
    public static final int fe_dir_port_port_write_count_VALUE = 108;
    /**
     * <code>fe_dir_port_port_read_thruput_kbytes = 109;</code>
     */
    public static final int fe_dir_port_port_read_thruput_kbytes_VALUE = 109;
    /**
     * <code>fe_dir_port_port_write_thruput_kbytes = 110;</code>
     */
    public static final int fe_dir_port_port_write_thruput_kbytes_VALUE = 110;
    /**
     * <code>fe_dir_port_port_speed = 111;</code>
     */
    public static final int fe_dir_port_port_speed_VALUE = 111;
    /**
     * <code>fe_dir_port_negotiated_speed = 112;</code>
     */
    public static final int fe_dir_port_negotiated_speed_VALUE = 112;
    /**
     * <code>fedir_accumQueueDepthRange0 = 113;</code>
     */
    public static final int fedir_accumQueueDepthRange0_VALUE = 113;
    /**
     * <code>fedir_accumQueueDepthRange5 = 114;</code>
     */
    public static final int fedir_accumQueueDepthRange5_VALUE = 114;
    /**
     * <code>fedir_accumQueueDepthRange10 = 115;</code>
     */
    public static final int fedir_accumQueueDepthRange10_VALUE = 115;
    /**
     * <code>fedir_accumQueueDepthRange20 = 116;</code>
     */
    public static final int fedir_accumQueueDepthRange20_VALUE = 116;
    /**
     * <code>fedir_accumQueueDepthRange40 = 117;</code>
     */
    public static final int fedir_accumQueueDepthRange40_VALUE = 117;
    /**
     * <code>fedir_accumQueueDepthRange80 = 118;</code>
     */
    public static final int fedir_accumQueueDepthRange80_VALUE = 118;
    /**
     * <code>fedir_accumQueueDepthRange160 = 119;</code>
     */
    public static final int fedir_accumQueueDepthRange160_VALUE = 119;
    /**
     * <code>fedir_accumQueueDepthRange320 = 120;</code>
     */
    public static final int fedir_accumQueueDepthRange320_VALUE = 120;
    /**
     * <code>fedir_accumQueueDepthRange640 = 121;</code>
     */
    public static final int fedir_accumQueueDepthRange640_VALUE = 121;
    /**
     * <code>fedir_accumQueueDepthRangeOver640 = 122;</code>
     */
    public static final int fedir_accumQueueDepthRangeOver640_VALUE = 122;
    /**
     * <code>fedir_queueDepthCountRange0 = 123;</code>
     */
    public static final int fedir_queueDepthCountRange0_VALUE = 123;
    /**
     * <code>fedir_queueDepthCountRange5 = 124;</code>
     */
    public static final int fedir_queueDepthCountRange5_VALUE = 124;
    /**
     * <code>fedir_queueDepthCountRange10 = 125;</code>
     */
    public static final int fedir_queueDepthCountRange10_VALUE = 125;
    /**
     * <code>fedir_queueDepthCountRange20 = 126;</code>
     */
    public static final int fedir_queueDepthCountRange20_VALUE = 126;
    /**
     * <code>fedir_queueDepthCountRange40 = 127;</code>
     */
    public static final int fedir_queueDepthCountRange40_VALUE = 127;
    /**
     * <code>fedir_queueDepthCountRange80 = 128;</code>
     */
    public static final int fedir_queueDepthCountRange80_VALUE = 128;
    /**
     * <code>fedir_queueDepthCountRange160 = 129;</code>
     */
    public static final int fedir_queueDepthCountRange160_VALUE = 129;
    /**
     * <code>fedir_queueDepthCountRange320 = 130;</code>
     */
    public static final int fedir_queueDepthCountRange320_VALUE = 130;
    /**
     * <code>fedir_queueDepthCountRange640 = 131;</code>
     */
    public static final int fedir_queueDepthCountRange640_VALUE = 131;
    /**
     * <code>fedir_queueDepthCountRangeOver640 = 132;</code>
     */
    public static final int fedir_queueDepthCountRangeOver640_VALUE = 132;
    /**
     * <code>fedir_read_resp_time_count0 = 133;</code>
     */
    public static final int fedir_read_resp_time_count0_VALUE = 133;
    /**
     * <code>fedir_read_resp_time_count1 = 134;</code>
     */
    public static final int fedir_read_resp_time_count1_VALUE = 134;
    /**
     * <code>fedir_read_resp_time_count2 = 135;</code>
     */
    public static final int fedir_read_resp_time_count2_VALUE = 135;
    /**
     * <code>fedir_read_resp_time_count3 = 136;</code>
     */
    public static final int fedir_read_resp_time_count3_VALUE = 136;
    /**
     * <code>fedir_read_resp_time_count4 = 137;</code>
     */
    public static final int fedir_read_resp_time_count4_VALUE = 137;
    /**
     * <code>fedir_read_resp_time_count5 = 138;</code>
     */
    public static final int fedir_read_resp_time_count5_VALUE = 138;
    /**
     * <code>fedir_read_resp_time_count6 = 139;</code>
     */
    public static final int fedir_read_resp_time_count6_VALUE = 139;
    /**
     * <code>fedir_read_resp_time_count7 = 140;</code>
     */
    public static final int fedir_read_resp_time_count7_VALUE = 140;
    /**
     * <code>fedir_write_resp_time_count0 = 141;</code>
     */
    public static final int fedir_write_resp_time_count0_VALUE = 141;
    /**
     * <code>fedir_write_resp_time_count1 = 142;</code>
     */
    public static final int fedir_write_resp_time_count1_VALUE = 142;
    /**
     * <code>fedir_write_resp_time_count2 = 143;</code>
     */
    public static final int fedir_write_resp_time_count2_VALUE = 143;
    /**
     * <code>fedir_write_resp_time_count3 = 144;</code>
     */
    public static final int fedir_write_resp_time_count3_VALUE = 144;
    /**
     * <code>fedir_write_resp_time_count4 = 145;</code>
     */
    public static final int fedir_write_resp_time_count4_VALUE = 145;
    /**
     * <code>fedir_write_resp_time_count5 = 146;</code>
     */
    public static final int fedir_write_resp_time_count5_VALUE = 146;
    /**
     * <code>fedir_write_resp_time_count6 = 147;</code>
     */
    public static final int fedir_write_resp_time_count6_VALUE = 147;
    /**
     * <code>fedir_write_resp_time_count7 = 148;</code>
     */
    public static final int fedir_write_resp_time_count7_VALUE = 148;
    /**
     * <code>fedir_numIoReq = 149;</code>
     */
    public static final int fedir_numIoReq_VALUE = 149;
    /**
     * <code>fedir_derived_avg_queue_depth_range = 150;</code>
     */
    public static final int fedir_derived_avg_queue_depth_range_VALUE = 150;
    /**
     * <code>fedir_queueDepthCountRange = 151;</code>
     */
    public static final int fedir_queueDepthCountRange_VALUE = 151;
    /**
     * <code>fedir_read_resp_time_count = 152;</code>
     */
    public static final int fedir_read_resp_time_count_VALUE = 152;
    /**
     * <code>fedir_write_resp_time_count = 153;</code>
     */
    public static final int fedir_write_resp_time_count_VALUE = 153;
    /**
     * <code>fedir_derived_avg_read_time_ms = 154;</code>
     */
    public static final int fedir_derived_avg_read_time_ms_VALUE = 154;
    /**
     * <code>fedir_derived_avg_write_time_ms = 155;</code>
     */
    public static final int fedir_derived_avg_write_time_ms_VALUE = 155;
    /**
     * <code>fedir_dirUtilization = 156;</code>
     */
    public static final int fedir_dirUtilization_VALUE = 156;
    /**
     * <code>fedir_total_syscall_time = 157;</code>
     */
    public static final int fedir_total_syscall_time_VALUE = 157;
    /**
     * <code>fedir_derived_avg_queue_depth_range0 = 158;</code>
     */
    public static final int fedir_derived_avg_queue_depth_range0_VALUE = 158;
    /**
     * <code>fedir_derived_avg_queue_depth_range5 = 159;</code>
     */
    public static final int fedir_derived_avg_queue_depth_range5_VALUE = 159;
    /**
     * <code>fedir_derived_avg_queue_depth_range10 = 160;</code>
     */
    public static final int fedir_derived_avg_queue_depth_range10_VALUE = 160;
    /**
     * <code>fedir_derived_avg_queue_depth_range20 = 161;</code>
     */
    public static final int fedir_derived_avg_queue_depth_range20_VALUE = 161;
    /**
     * <code>fedir_derived_avg_queue_depth_range40 = 162;</code>
     */
    public static final int fedir_derived_avg_queue_depth_range40_VALUE = 162;
    /**
     * <code>fedir_derived_avg_queue_depth_range80 = 163;</code>
     */
    public static final int fedir_derived_avg_queue_depth_range80_VALUE = 163;
    /**
     * <code>fedir_derived_avg_queue_depth_range160 = 164;</code>
     */
    public static final int fedir_derived_avg_queue_depth_range160_VALUE = 164;
    /**
     * <code>fedir_derived_avg_queue_depth_range320 = 165;</code>
     */
    public static final int fedir_derived_avg_queue_depth_range320_VALUE = 165;
    /**
     * <code>fedir_derived_avg_queue_depth_range640 = 166;</code>
     */
    public static final int fedir_derived_avg_queue_depth_range640_VALUE = 166;
    /**
     * <code>fedir_derived_avg_queue_depth_rangeOver640 = 167;</code>
     */
    public static final int fedir_derived_avg_queue_depth_rangeOver640_VALUE = 167;
    /**
     * <code>array_cacheTrackSize = 168;</code>
     */
    public static final int array_cacheTrackSize_VALUE = 168;
    /**
     * <code>array_numKbytesRead = 169;</code>
     */
    public static final int array_numKbytesRead_VALUE = 169;
    /**
     * <code>array_numKbytesWritten = 170;</code>
     */
    public static final int array_numKbytesWritten_VALUE = 170;
    /**
     * <code>array_numWritePendingTracks = 171;</code>
     */
    public static final int array_numWritePendingTracks_VALUE = 171;
    /**
     * <code>array_numHits = 172;</code>
     */
    public static final int array_numHits_VALUE = 172;
    /**
     * <code>array_numReadHits = 173;</code>
     */
    public static final int array_numReadHits_VALUE = 173;
    /**
     * <code>array_numReadReq = 174;</code>
     */
    public static final int array_numReadReq_VALUE = 174;
    /**
     * <code>array_numWriteReq = 175;</code>
     */
    public static final int array_numWriteReq_VALUE = 175;
    /**
     * <code>array_sysMaxWpLimit = 176;</code>
     */
    public static final int array_sysMaxWpLimit_VALUE = 176;
    /**
     * <code>array_numIoReq = 177;</code>
     */
    public static final int array_numIoReq_VALUE = 177;
    /**
     * <code>disk_totalScsiCommands = 178;</code>
     */
    public static final int disk_totalScsiCommands_VALUE = 178;
    /**
     * <code>disk_readCommands = 179;</code>
     */
    public static final int disk_readCommands_VALUE = 179;
    /**
     * <code>disk_writeCommands = 180;</code>
     */
    public static final int disk_writeCommands_VALUE = 180;
    /**
     * <code>disk_numSkipMaskCommands = 181;</code>
     */
    public static final int disk_numSkipMaskCommands_VALUE = 181;
    /**
     * <code>disk_numXorWriteCommands = 182;</code>
     */
    public static final int disk_numXorWriteCommands_VALUE = 182;
    /**
     * <code>disk_derived_xor_write_read_commands_per_sec = 183;</code>
     */
    public static final int disk_derived_xor_write_read_commands_per_sec_VALUE = 183;
    /**
     * <code>disk_numXorReadCommands = 184;</code>
     */
    public static final int disk_numXorReadCommands_VALUE = 184;
    /**
     * <code>disk_numKbytesWritten = 185;</code>
     */
    public static final int disk_numKbytesWritten_VALUE = 185;
    /**
     * <code>disk_derived_avg_kbytes_per_write = 186;</code>
     */
    public static final int disk_derived_avg_kbytes_per_write_VALUE = 186;
    /**
     * <code>disk_numKbytesRead = 187;</code>
     */
    public static final int disk_numKbytesRead_VALUE = 187;
    /**
     * <code>disk_derived_avg_kbytes_per_read = 188;</code>
     */
    public static final int disk_derived_avg_kbytes_per_read_VALUE = 188;
    /**
     * <code>disk_derived_avg_read_time_ms = 189;</code>
     */
    public static final int disk_derived_avg_read_time_ms_VALUE = 189;
    /**
     * <code>disk_derived_avg_write_time_ms = 190;</code>
     */
    public static final int disk_derived_avg_write_time_ms_VALUE = 190;
    /**
     * <code>disk_totalReadTime = 191;</code>
     */
    public static final int disk_totalReadTime_VALUE = 191;
    /**
     * <code>disk_totalWriteTime = 192;</code>
     */
    public static final int disk_totalWriteTime_VALUE = 192;
    /**
     * <code>dev_front_end_derived_total_ios_per_sec = 193;</code>
     */
    public static final int dev_front_end_derived_total_ios_per_sec_VALUE = 193;
    /**
     * <code>dev_front_end_derived_total_reads_per_sec = 194;</code>
     */
    public static final int dev_front_end_derived_total_reads_per_sec_VALUE = 194;
    /**
     * <code>dev_front_end_num_seq_read_reqs = 195;</code>
     */
    public static final int dev_front_end_num_seq_read_reqs_VALUE = 195;
    /**
     * <code>dev_front_end_num_seq_write_reqs = 196;</code>
     */
    public static final int dev_front_end_num_seq_write_reqs_VALUE = 196;
    /**
     * <code>dev_front_end_derived_kbytes_read_per_sec = 197;</code>
     */
    public static final int dev_front_end_derived_kbytes_read_per_sec_VALUE = 197;
    /**
     * <code>dev_front_end_derived_kbytes_written_per_sec = 198;</code>
     */
    public static final int dev_front_end_derived_kbytes_written_per_sec_VALUE = 198;
    /**
     * <code>dev_front_end_derived_avg_read_size_in_kbytes = 199;</code>
     */
    public static final int dev_front_end_derived_avg_read_size_in_kbytes_VALUE = 199;
    /**
     * <code>dev_front_end_derived_avg_write_size_in_kbytes = 200;</code>
     */
    public static final int dev_front_end_derived_avg_write_size_in_kbytes_VALUE = 200;
    /**
     * <code>dev_front_end_num_wp_tracks = 201;</code>
     */
    public static final int dev_front_end_num_wp_tracks_VALUE = 201;
    /**
     * <code>dev_front_end_device_max_wp_limit = 202;</code>
     */
    public static final int dev_front_end_device_max_wp_limit_VALUE = 202;
    /**
     * <code>dev_front_end_derived_sampled_avg_read_time = 203;</code>
     */
    public static final int dev_front_end_derived_sampled_avg_read_time_VALUE = 203;
    /**
     * <code>dev_front_end_derived_sampled_avg_write_time = 204;</code>
     */
    public static final int dev_front_end_derived_sampled_avg_write_time_VALUE = 204;
    /**
     * <code>dev_front_end_crm_reads = 205;</code>
     */
    public static final int dev_front_end_crm_reads_VALUE = 205;
    /**
     * <code>dev_front_end_crm_reads_kbytes = 206;</code>
     */
    public static final int dev_front_end_crm_reads_kbytes_VALUE = 206;
    /**
     * <code>dev_front_end_num_random_read_reqs = 207;</code>
     */
    public static final int dev_front_end_num_random_read_reqs_VALUE = 207;
    /**
     * <code>dev_front_end_num_random_write_reqs = 208;</code>
     */
    public static final int dev_front_end_num_random_write_reqs_VALUE = 208;
    /**
     * <code>dev_front_end_num_random_read_hits = 209;</code>
     */
    public static final int dev_front_end_num_random_read_hits_VALUE = 209;
    /**
     * <code>dev_front_end_num_random_write_hits = 210;</code>
     */
    public static final int dev_front_end_num_random_write_hits_VALUE = 210;
    /**
     * <code>dev_front_end_derived_total_write_misses_per_sec = 211;</code>
     */
    public static final int dev_front_end_derived_total_write_misses_per_sec_VALUE = 211;
    /**
     * <code>dev_front_end_kbytes_read = 212;</code>
     */
    public static final int dev_front_end_kbytes_read_VALUE = 212;
    /**
     * <code>dev_front_end_kbytes_written = 213;</code>
     */
    public static final int dev_front_end_kbytes_written_VALUE = 213;
    /**
     * <code>dev_front_end_device_block_size = 214;</code>
     */
    public static final int dev_front_end_device_block_size_VALUE = 214;
    /**
     * <code>dev_front_end_total_read_time = 215;</code>
     */
    public static final int dev_front_end_total_read_time_VALUE = 215;
    /**
     * <code>dev_front_end_total_write_time = 216;</code>
     */
    public static final int dev_front_end_total_write_time_VALUE = 216;
    /**
     * <code>dev_back_end_num_wp_tracks = 217;</code>
     */
    public static final int dev_back_end_num_wp_tracks_VALUE = 217;
    /**
     * <code>dev_back_end_num_write_reqs = 218;</code>
     */
    public static final int dev_back_end_num_write_reqs_VALUE = 218;
    /**
     * <code>dev_back_end_num_pf_tracks = 219;</code>
     */
    public static final int dev_back_end_num_pf_tracks_VALUE = 219;
    /**
     * <code>dev_back_end_num_read_reqs = 220;</code>
     */
    public static final int dev_back_end_num_read_reqs_VALUE = 220;
    /**
     * <code>dev_back_end_derived_da_kbytes_read_per_sec = 221;</code>
     */
    public static final int dev_back_end_derived_da_kbytes_read_per_sec_VALUE = 221;
    /**
     * <code>dev_back_end_derived_da_kbytes_written_per_sec = 222;</code>
     */
    public static final int dev_back_end_derived_da_kbytes_written_per_sec_VALUE = 222;
    /**
     * <code>dev_back_end_num_blocks_written = 223;</code>
     */
    public static final int dev_back_end_num_blocks_written_VALUE = 223;
    /**
     * <code>dev_back_end_num_blocks_read = 224;</code>
     */
    public static final int dev_back_end_num_blocks_read_VALUE = 224;
    /**
     * <code>dev_back_end_device_block_size = 225;</code>
     */
    public static final int dev_back_end_device_block_size_VALUE = 225;
    /**
     * <code>rdfdevice_total_reads = 226;</code>
     */
    public static final int rdfdevice_total_reads_VALUE = 226;
    /**
     * <code>rdfdevice_total_writes = 227;</code>
     */
    public static final int rdfdevice_total_writes_VALUE = 227;
    /**
     * <code>rdfdevice_bytes_read_kb = 228;</code>
     */
    public static final int rdfdevice_bytes_read_kb_VALUE = 228;
    /**
     * <code>rdfdevice_bytes_written_kb = 229;</code>
     */
    public static final int rdfdevice_bytes_written_kb_VALUE = 229;
    /**
     * <code>devicepool_allocatedTracksPerPool = 230;</code>
     */
    public static final int devicepool_allocatedTracksPerPool_VALUE = 230;
    /**
     * <code>devicepool_destageWrite = 231;</code>
     */
    public static final int devicepool_destageWrite_VALUE = 231;
    /**
     * <code>devicepool_destageWriteKb = 232;</code>
     */
    public static final int devicepool_destageWriteKb_VALUE = 232;
    /**
     * <code>devicepool_prefetchKb = 233;</code>
     */
    public static final int devicepool_prefetchKb_VALUE = 233;
    /**
     * <code>devicepool_prefetch = 234;</code>
     */
    public static final int devicepool_prefetch_VALUE = 234;
    /**
     * <code>devicepool_randomReadMissKb = 235;</code>
     */
    public static final int devicepool_randomReadMissKb_VALUE = 235;
    /**
     * <code>devicepool_randomReadMiss = 236;</code>
     */
    public static final int devicepool_randomReadMiss_VALUE = 236;
    /**
     * <code>devicepool_compressedTracksPerPool = 237;</code>
     */
    public static final int devicepool_compressedTracksPerPool_VALUE = 237;
    /**
     * <code>thinpool_total_enabled_tracks_64 = 238;</code>
     */
    public static final int thinpool_total_enabled_tracks_64_VALUE = 238;
    /**
     * <code>thinpool_fast_egress_counter = 239;</code>
     */
    public static final int thinpool_fast_egress_counter_VALUE = 239;
    /**
     * <code>thinpool_total_free_tracks_64 = 240;</code>
     */
    public static final int thinpool_total_free_tracks_64_VALUE = 240;
    /**
     * <code>thinpool_total_used_tracks_64 = 241;</code>
     */
    public static final int thinpool_total_used_tracks_64_VALUE = 241;


    public final int getNumber() {
      if (index == -1) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    public static KPIMetric valueOf(int value) {
      switch (value) {
        case 0: return im_dir_memory_page_fall_through_time_total;
        case 1: return im_dir_memory_page_usage_total;
        case 2: return eds_dir_random_read_misses;
        case 3: return eds_dir_random_read_misses_kbytes;
        case 4: return eds_dir_random_write_misses;
        case 5: return eds_dir_random_write_misses_kbytes;
        case 6: return rdfdir_numKbytesRecvd;
        case 7: return rdfdir_numKbytesSent;
        case 8: return rdfdir_total_copy_io_count;
        case 9: return rdfdir_total_copy_io_kbytes;
        case 10: return rdfdir_total_srdfs_write_count;
        case 11: return core_time_stamp;
        case 12: return core_symmk_idle_time;
        case 13: return core_im_time_stamp;
        case 14: return core_im_page_in_time;
        case 15: return core_im_page_out_time;
        case 16: return core_im_environmental_time;
        case 17: return core_im_other_time;
        case 18: return core_im_symmk_total_time;
        case 19: return core_eds_time_stamp;
        case 20: return core_eds_emulation_time;
        case 21: return core_eds_io_machine_time;
        case 22: return core_eds_lp_io_machine_time;
        case 23: return core_eds_housekeeping_time;
        case 24: return core_eds_lrep_control_time;
        case 25: return core_eds_vp_time;
        case 26: return core_eds_copy_scanner_time;
        case 27: return core_eds_pyramid_time;
        case 28: return core_eds_scan_time;
        case 29: return core_eds_snow_spillover_time;
        case 30: return core_eds_remote_replication_time;
        case 31: return core_eds_syscalls_time;
        case 32: return core_eds_watchdog_time;
        case 33: return core_eds_allocation_split_time;
        case 34: return core_eds_fsm_time;
        case 35: return core_eds_symmk_total_time;
        case 36: return core_fe_time_stamp;
        case 37: return core_fe_total_reads_time;
        case 38: return core_fe_total_writes_time;
        case 39: return core_fe_syscalls_time;
        case 40: return core_fe_managment_time;
        case 41: return core_fe_link_port_time;
        case 42: return core_fe_xrc_replication_time;
        case 43: return core_fe_zhpf_reads_time;
        case 44: return core_fe_zhpf_writes_time;
        case 45: return core_fe_odx_vaai_xcopy_time;
        case 46: return core_fe_odx_vaai_write_same_time;
        case 47: return core_fe_odx_vaai_lock_time;
        case 48: return core_fe_cdi_time;
        case 49: return core_fe_lp_task_time;
        case 50: return core_fe_symmk_total_time;
        case 51: return core_be_time_stamp;
        case 52: return core_be_total_read_misses_time;
        case 53: return core_be_total_writes_time;
        case 54: return core_be_total_prefetch_time;
        case 55: return core_be_total_copy_reads_time;
        case 56: return core_be_total_copy_writes_time;
        case 57: return core_be_syscalls_time;
        case 58: return core_be_managment_time;
        case 59: return core_be_rebuild_time;
        case 60: return core_be_ivtoc_time;
        case 61: return core_be_software_compression_time;
        case 62: return core_be_other_time;
        case 63: return core_be_cdi_time;
        case 64: return core_be_lp_task_time;
        case 65: return core_be_symmk_total_time;
        case 66: return core_rdf_time_stamp;
        case 67: return core_rdf_total_reads_time;
        case 68: return core_rdf_total_writes_time;
        case 69: return core_rdf_total_copy_reads_time;
        case 70: return core_rdf_total_copy_writes_time;
        case 71: return core_rdf_syscalls_time;
        case 72: return core_rdf_other_time;
        case 73: return core_rdf_lp_task_time;
        case 74: return core_rdf_link_management_time;
        case 75: return core_rdf_software_compression_time;
        case 76: return core_rdf_symmk_total_time;
        case 77: return core_ficon_time_stamp;
        case 78: return core_ficon_random_read_hits_time;
        case 79: return core_ficon_random_write_hits_time;
        case 80: return core_ficon_random_write_misses_time;
        case 81: return core_ficon_random_read_misses_time;
        case 82: return core_ficon_total_sequential_reads_time;
        case 83: return core_ficon_total_sequential_writes_time;
        case 84: return core_ficon_syscalls_time;
        case 85: return core_ficon_managment_time;
        case 86: return core_ficon_link_port_time;
        case 87: return core_ficon_xrc_replication_time;
        case 88: return core_ficon_zhpf_reads_time;
        case 89: return core_ficon_zhpf_writes_time;
        case 90: return core_ficon_cdi_time;
        case 91: return core_ficon_lp_task_time;
        case 92: return core_ficon_symmk_total_time;
        case 93: return gos_memory_size;
        case 94: return gos_num_cpus;
        case 95: return rdfagrp_sysWritePendingCount;
        case 96: return rdfagrp_dseTracksUsed;
        case 97: return rdfagrp_hostWriteNumIoReq;
        case 98: return rdfagrp_hostWriteNumMbytes;
        case 99: return bedir_numIoReq;
        case 100: return bedir_dirUtilization;
        case 101: return bedir_compress_reads;
        case 102: return bedir_compress_read_kbytes;
        case 103: return bedir_compress_writes;
        case 104: return bedir_compress_write_kbytes;
        case 105: return fe_dir_port_port_derived_ios_count;
        case 106: return fe_dir_port_port_derived_total_thruput_kbytes;
        case 107: return fe_dir_port_port_read_count;
        case 108: return fe_dir_port_port_write_count;
        case 109: return fe_dir_port_port_read_thruput_kbytes;
        case 110: return fe_dir_port_port_write_thruput_kbytes;
        case 111: return fe_dir_port_port_speed;
        case 112: return fe_dir_port_negotiated_speed;
        case 113: return fedir_accumQueueDepthRange0;
        case 114: return fedir_accumQueueDepthRange5;
        case 115: return fedir_accumQueueDepthRange10;
        case 116: return fedir_accumQueueDepthRange20;
        case 117: return fedir_accumQueueDepthRange40;
        case 118: return fedir_accumQueueDepthRange80;
        case 119: return fedir_accumQueueDepthRange160;
        case 120: return fedir_accumQueueDepthRange320;
        case 121: return fedir_accumQueueDepthRange640;
        case 122: return fedir_accumQueueDepthRangeOver640;
        case 123: return fedir_queueDepthCountRange0;
        case 124: return fedir_queueDepthCountRange5;
        case 125: return fedir_queueDepthCountRange10;
        case 126: return fedir_queueDepthCountRange20;
        case 127: return fedir_queueDepthCountRange40;
        case 128: return fedir_queueDepthCountRange80;
        case 129: return fedir_queueDepthCountRange160;
        case 130: return fedir_queueDepthCountRange320;
        case 131: return fedir_queueDepthCountRange640;
        case 132: return fedir_queueDepthCountRangeOver640;
        case 133: return fedir_read_resp_time_count0;
        case 134: return fedir_read_resp_time_count1;
        case 135: return fedir_read_resp_time_count2;
        case 136: return fedir_read_resp_time_count3;
        case 137: return fedir_read_resp_time_count4;
        case 138: return fedir_read_resp_time_count5;
        case 139: return fedir_read_resp_time_count6;
        case 140: return fedir_read_resp_time_count7;
        case 141: return fedir_write_resp_time_count0;
        case 142: return fedir_write_resp_time_count1;
        case 143: return fedir_write_resp_time_count2;
        case 144: return fedir_write_resp_time_count3;
        case 145: return fedir_write_resp_time_count4;
        case 146: return fedir_write_resp_time_count5;
        case 147: return fedir_write_resp_time_count6;
        case 148: return fedir_write_resp_time_count7;
        case 149: return fedir_numIoReq;
        case 150: return fedir_derived_avg_queue_depth_range;
        case 151: return fedir_queueDepthCountRange;
        case 152: return fedir_read_resp_time_count;
        case 153: return fedir_write_resp_time_count;
        case 154: return fedir_derived_avg_read_time_ms;
        case 155: return fedir_derived_avg_write_time_ms;
        case 156: return fedir_dirUtilization;
        case 157: return fedir_total_syscall_time;
        case 158: return fedir_derived_avg_queue_depth_range0;
        case 159: return fedir_derived_avg_queue_depth_range5;
        case 160: return fedir_derived_avg_queue_depth_range10;
        case 161: return fedir_derived_avg_queue_depth_range20;
        case 162: return fedir_derived_avg_queue_depth_range40;
        case 163: return fedir_derived_avg_queue_depth_range80;
        case 164: return fedir_derived_avg_queue_depth_range160;
        case 165: return fedir_derived_avg_queue_depth_range320;
        case 166: return fedir_derived_avg_queue_depth_range640;
        case 167: return fedir_derived_avg_queue_depth_rangeOver640;
        case 168: return array_cacheTrackSize;
        case 169: return array_numKbytesRead;
        case 170: return array_numKbytesWritten;
        case 171: return array_numWritePendingTracks;
        case 172: return array_numHits;
        case 173: return array_numReadHits;
        case 174: return array_numReadReq;
        case 175: return array_numWriteReq;
        case 176: return array_sysMaxWpLimit;
        case 177: return array_numIoReq;
        case 178: return disk_totalScsiCommands;
        case 179: return disk_readCommands;
        case 180: return disk_writeCommands;
        case 181: return disk_numSkipMaskCommands;
        case 182: return disk_numXorWriteCommands;
        case 183: return disk_derived_xor_write_read_commands_per_sec;
        case 184: return disk_numXorReadCommands;
        case 185: return disk_numKbytesWritten;
        case 186: return disk_derived_avg_kbytes_per_write;
        case 187: return disk_numKbytesRead;
        case 188: return disk_derived_avg_kbytes_per_read;
        case 189: return disk_derived_avg_read_time_ms;
        case 190: return disk_derived_avg_write_time_ms;
        case 191: return disk_totalReadTime;
        case 192: return disk_totalWriteTime;
        case 193: return dev_front_end_derived_total_ios_per_sec;
        case 194: return dev_front_end_derived_total_reads_per_sec;
        case 195: return dev_front_end_num_seq_read_reqs;
        case 196: return dev_front_end_num_seq_write_reqs;
        case 197: return dev_front_end_derived_kbytes_read_per_sec;
        case 198: return dev_front_end_derived_kbytes_written_per_sec;
        case 199: return dev_front_end_derived_avg_read_size_in_kbytes;
        case 200: return dev_front_end_derived_avg_write_size_in_kbytes;
        case 201: return dev_front_end_num_wp_tracks;
        case 202: return dev_front_end_device_max_wp_limit;
        case 203: return dev_front_end_derived_sampled_avg_read_time;
        case 204: return dev_front_end_derived_sampled_avg_write_time;
        case 205: return dev_front_end_crm_reads;
        case 206: return dev_front_end_crm_reads_kbytes;
        case 207: return dev_front_end_num_random_read_reqs;
        case 208: return dev_front_end_num_random_write_reqs;
        case 209: return dev_front_end_num_random_read_hits;
        case 210: return dev_front_end_num_random_write_hits;
        case 211: return dev_front_end_derived_total_write_misses_per_sec;
        case 212: return dev_front_end_kbytes_read;
        case 213: return dev_front_end_kbytes_written;
        case 214: return dev_front_end_device_block_size;
        case 215: return dev_front_end_total_read_time;
        case 216: return dev_front_end_total_write_time;
        case 217: return dev_back_end_num_wp_tracks;
        case 218: return dev_back_end_num_write_reqs;
        case 219: return dev_back_end_num_pf_tracks;
        case 220: return dev_back_end_num_read_reqs;
        case 221: return dev_back_end_derived_da_kbytes_read_per_sec;
        case 222: return dev_back_end_derived_da_kbytes_written_per_sec;
        case 223: return dev_back_end_num_blocks_written;
        case 224: return dev_back_end_num_blocks_read;
        case 225: return dev_back_end_device_block_size;
        case 226: return rdfdevice_total_reads;
        case 227: return rdfdevice_total_writes;
        case 228: return rdfdevice_bytes_read_kb;
        case 229: return rdfdevice_bytes_written_kb;
        case 230: return devicepool_allocatedTracksPerPool;
        case 231: return devicepool_destageWrite;
        case 232: return devicepool_destageWriteKb;
        case 233: return devicepool_prefetchKb;
        case 234: return devicepool_prefetch;
        case 235: return devicepool_randomReadMissKb;
        case 236: return devicepool_randomReadMiss;
        case 237: return devicepool_compressedTracksPerPool;
        case 238: return thinpool_total_enabled_tracks_64;
        case 239: return thinpool_fast_egress_counter;
        case 240: return thinpool_total_free_tracks_64;
        case 241: return thinpool_total_used_tracks_64;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<KPIMetric>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        KPIMetric> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<KPIMetric>() {
            public KPIMetric findValueByNumber(int number) {
              return KPIMetric.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return WorkloadStampsProto.getDescriptor().getEnumTypes().get(1);
    }

    private static final KPIMetric[] VALUES = values();

    public static KPIMetric valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private KPIMetric(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:KPIMetric)
  }

  public interface WorkloadTimeStampsProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:WorkloadTimeStampsProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int64 _timestamps = 1;</code>
     */
    java.util.List<java.lang.Long> getTimestampsList();
    /**
     * <code>repeated int64 _timestamps = 1;</code>
     */
    int getTimestampsCount();
    /**
     * <code>repeated int64 _timestamps = 1;</code>
     */
    long getTimestamps(int index);

    /**
     * <code>optional string _symmetrixId = 2;</code>
     */
    java.lang.String getSymmetrixId();
    /**
     * <code>optional string _symmetrixId = 2;</code>
     */
    com.google.protobuf.ByteString
        getSymmetrixIdBytes();

    /**
     * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
     *
     * <pre>
     *_dateTimes is not necessary, we can always get it from _timestamps.
     * </pre>
     */
    java.util.List<WorkloadStampsProto.KPICategoryKPIComponentPair> 
        getDataList();
    /**
     * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
     *
     * <pre>
     *_dateTimes is not necessary, we can always get it from _timestamps.
     * </pre>
     */
    WorkloadStampsProto.KPICategoryKPIComponentPair getData(int index);
    /**
     * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
     *
     * <pre>
     *_dateTimes is not necessary, we can always get it from _timestamps.
     * </pre>
     */
    int getDataCount();
    /**
     * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
     *
     * <pre>
     *_dateTimes is not necessary, we can always get it from _timestamps.
     * </pre>
     */
    java.util.List<? extends WorkloadStampsProto.KPICategoryKPIComponentPairOrBuilder> 
        getDataOrBuilderList();
    /**
     * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
     *
     * <pre>
     *_dateTimes is not necessary, we can always get it from _timestamps.
     * </pre>
     */
    WorkloadStampsProto.KPICategoryKPIComponentPairOrBuilder getDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code WorkloadTimeStampsProto}
   */
  public  static final class WorkloadTimeStampsProto extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:WorkloadTimeStampsProto)
      WorkloadTimeStampsProtoOrBuilder {
    // Use WorkloadTimeStampsProto.newBuilder() to construct.
    private WorkloadTimeStampsProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private WorkloadTimeStampsProto() {
      Timestamps_ = java.util.Collections.emptyList();
      SymmetrixId_ = "";
      Data_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private WorkloadTimeStampsProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                Timestamps_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              Timestamps_.add(input.readInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                Timestamps_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                Timestamps_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              SymmetrixId_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                Data_ = new java.util.ArrayList<WorkloadStampsProto.KPICategoryKPIComponentPair>();
                mutable_bitField0_ |= 0x00000004;
              }
              Data_.add(input.readMessage(WorkloadStampsProto.KPICategoryKPIComponentPair.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          Timestamps_ = java.util.Collections.unmodifiableList(Timestamps_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          Data_ = java.util.Collections.unmodifiableList(Data_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return WorkloadStampsProto.internal_static_WorkloadTimeStampsProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return WorkloadStampsProto.internal_static_WorkloadTimeStampsProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              WorkloadStampsProto.WorkloadTimeStampsProto.class, WorkloadStampsProto.WorkloadTimeStampsProto.Builder.class);
    }

    private int bitField0_;
    public static final int _TIMESTAMPS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> Timestamps_;
    /**
     * <code>repeated int64 _timestamps = 1;</code>
     */
    public java.util.List<java.lang.Long>
        getTimestampsList() {
      return Timestamps_;
    }
    /**
     * <code>repeated int64 _timestamps = 1;</code>
     */
    public int getTimestampsCount() {
      return Timestamps_.size();
    }
    /**
     * <code>repeated int64 _timestamps = 1;</code>
     */
    public long getTimestamps(int index) {
      return Timestamps_.get(index);
    }
    private int TimestampsMemoizedSerializedSize = -1;

    public static final int _SYMMETRIXID_FIELD_NUMBER = 2;
    private volatile java.lang.Object SymmetrixId_;
    /**
     * <code>optional string _symmetrixId = 2;</code>
     */
    public java.lang.String getSymmetrixId() {
      java.lang.Object ref = SymmetrixId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        SymmetrixId_ = s;
        return s;
      }
    }
    /**
     * <code>optional string _symmetrixId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSymmetrixIdBytes() {
      java.lang.Object ref = SymmetrixId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        SymmetrixId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int _DATA_FIELD_NUMBER = 3;
    private java.util.List<WorkloadStampsProto.KPICategoryKPIComponentPair> Data_;
    /**
     * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
     *
     * <pre>
     *_dateTimes is not necessary, we can always get it from _timestamps.
     * </pre>
     */
    public java.util.List<WorkloadStampsProto.KPICategoryKPIComponentPair> getDataList() {
      return Data_;
    }
    /**
     * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
     *
     * <pre>
     *_dateTimes is not necessary, we can always get it from _timestamps.
     * </pre>
     */
    public java.util.List<? extends WorkloadStampsProto.KPICategoryKPIComponentPairOrBuilder> 
        getDataOrBuilderList() {
      return Data_;
    }
    /**
     * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
     *
     * <pre>
     *_dateTimes is not necessary, we can always get it from _timestamps.
     * </pre>
     */
    public int getDataCount() {
      return Data_.size();
    }
    /**
     * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
     *
     * <pre>
     *_dateTimes is not necessary, we can always get it from _timestamps.
     * </pre>
     */
    public WorkloadStampsProto.KPICategoryKPIComponentPair getData(int index) {
      return Data_.get(index);
    }
    /**
     * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
     *
     * <pre>
     *_dateTimes is not necessary, we can always get it from _timestamps.
     * </pre>
     */
    public WorkloadStampsProto.KPICategoryKPIComponentPairOrBuilder getDataOrBuilder(
        int index) {
      return Data_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getTimestampsList().size() > 0) {
        output.writeRawVarint32(10);
        output.writeRawVarint32(TimestampsMemoizedSerializedSize);
      }
      for (int i = 0; i < Timestamps_.size(); i++) {
        output.writeInt64NoTag(Timestamps_.get(i));
      }
      if (!getSymmetrixIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, SymmetrixId_);
      }
      for (int i = 0; i < Data_.size(); i++) {
        output.writeMessage(3, Data_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < Timestamps_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(Timestamps_.get(i));
        }
        size += dataSize;
        if (!getTimestampsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        TimestampsMemoizedSerializedSize = dataSize;
      }
      if (!getSymmetrixIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, SymmetrixId_);
      }
      for (int i = 0; i < Data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, Data_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static WorkloadStampsProto.WorkloadTimeStampsProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static WorkloadStampsProto.WorkloadTimeStampsProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static WorkloadStampsProto.WorkloadTimeStampsProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static WorkloadStampsProto.WorkloadTimeStampsProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static WorkloadStampsProto.WorkloadTimeStampsProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static WorkloadStampsProto.WorkloadTimeStampsProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static WorkloadStampsProto.WorkloadTimeStampsProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static WorkloadStampsProto.WorkloadTimeStampsProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static WorkloadStampsProto.WorkloadTimeStampsProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static WorkloadStampsProto.WorkloadTimeStampsProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(WorkloadStampsProto.WorkloadTimeStampsProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code WorkloadTimeStampsProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:WorkloadTimeStampsProto)
        WorkloadStampsProto.WorkloadTimeStampsProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return WorkloadStampsProto.internal_static_WorkloadTimeStampsProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return WorkloadStampsProto.internal_static_WorkloadTimeStampsProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                WorkloadStampsProto.WorkloadTimeStampsProto.class, WorkloadStampsProto.WorkloadTimeStampsProto.Builder.class);
      }

      // Construct using WorkloadStampsProto.WorkloadTimeStampsProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDataFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        Timestamps_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        SymmetrixId_ = "";

        if (DataBuilder_ == null) {
          Data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          DataBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return WorkloadStampsProto.internal_static_WorkloadTimeStampsProto_descriptor;
      }

      public WorkloadStampsProto.WorkloadTimeStampsProto getDefaultInstanceForType() {
        return WorkloadStampsProto.WorkloadTimeStampsProto.getDefaultInstance();
      }

      public WorkloadStampsProto.WorkloadTimeStampsProto build() {
        WorkloadStampsProto.WorkloadTimeStampsProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public WorkloadStampsProto.WorkloadTimeStampsProto buildPartial() {
        WorkloadStampsProto.WorkloadTimeStampsProto result = new WorkloadStampsProto.WorkloadTimeStampsProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          Timestamps_ = java.util.Collections.unmodifiableList(Timestamps_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.Timestamps_ = Timestamps_;
        result.SymmetrixId_ = SymmetrixId_;
        if (DataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            Data_ = java.util.Collections.unmodifiableList(Data_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.Data_ = Data_;
        } else {
          result.Data_ = DataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof WorkloadStampsProto.WorkloadTimeStampsProto) {
          return mergeFrom((WorkloadStampsProto.WorkloadTimeStampsProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(WorkloadStampsProto.WorkloadTimeStampsProto other) {
        if (other == WorkloadStampsProto.WorkloadTimeStampsProto.getDefaultInstance()) return this;
        if (!other.Timestamps_.isEmpty()) {
          if (Timestamps_.isEmpty()) {
            Timestamps_ = other.Timestamps_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTimestampsIsMutable();
            Timestamps_.addAll(other.Timestamps_);
          }
          onChanged();
        }
        if (!other.getSymmetrixId().isEmpty()) {
          SymmetrixId_ = other.SymmetrixId_;
          onChanged();
        }
        if (DataBuilder_ == null) {
          if (!other.Data_.isEmpty()) {
            if (Data_.isEmpty()) {
              Data_ = other.Data_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDataIsMutable();
              Data_.addAll(other.Data_);
            }
            onChanged();
          }
        } else {
          if (!other.Data_.isEmpty()) {
            if (DataBuilder_.isEmpty()) {
              DataBuilder_.dispose();
              DataBuilder_ = null;
              Data_ = other.Data_;
              bitField0_ = (bitField0_ & ~0x00000004);
              DataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              DataBuilder_.addAllMessages(other.Data_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        WorkloadStampsProto.WorkloadTimeStampsProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (WorkloadStampsProto.WorkloadTimeStampsProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Long> Timestamps_ = java.util.Collections.emptyList();
      private void ensureTimestampsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          Timestamps_ = new java.util.ArrayList<java.lang.Long>(Timestamps_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int64 _timestamps = 1;</code>
       */
      public java.util.List<java.lang.Long>
          getTimestampsList() {
        return java.util.Collections.unmodifiableList(Timestamps_);
      }
      /**
       * <code>repeated int64 _timestamps = 1;</code>
       */
      public int getTimestampsCount() {
        return Timestamps_.size();
      }
      /**
       * <code>repeated int64 _timestamps = 1;</code>
       */
      public long getTimestamps(int index) {
        return Timestamps_.get(index);
      }
      /**
       * <code>repeated int64 _timestamps = 1;</code>
       */
      public Builder setTimestamps(
          int index, long value) {
        ensureTimestampsIsMutable();
        Timestamps_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 _timestamps = 1;</code>
       */
      public Builder addTimestamps(long value) {
        ensureTimestampsIsMutable();
        Timestamps_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 _timestamps = 1;</code>
       */
      public Builder addAllTimestamps(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureTimestampsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, Timestamps_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 _timestamps = 1;</code>
       */
      public Builder clearTimestamps() {
        Timestamps_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.lang.Object SymmetrixId_ = "";
      /**
       * <code>optional string _symmetrixId = 2;</code>
       */
      public java.lang.String getSymmetrixId() {
        java.lang.Object ref = SymmetrixId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          SymmetrixId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string _symmetrixId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSymmetrixIdBytes() {
        java.lang.Object ref = SymmetrixId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          SymmetrixId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string _symmetrixId = 2;</code>
       */
      public Builder setSymmetrixId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        SymmetrixId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string _symmetrixId = 2;</code>
       */
      public Builder clearSymmetrixId() {
        
        SymmetrixId_ = getDefaultInstance().getSymmetrixId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string _symmetrixId = 2;</code>
       */
      public Builder setSymmetrixIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        SymmetrixId_ = value;
        onChanged();
        return this;
      }

      private java.util.List<WorkloadStampsProto.KPICategoryKPIComponentPair> Data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          Data_ = new java.util.ArrayList<WorkloadStampsProto.KPICategoryKPIComponentPair>(Data_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          WorkloadStampsProto.KPICategoryKPIComponentPair, WorkloadStampsProto.KPICategoryKPIComponentPair.Builder, WorkloadStampsProto.KPICategoryKPIComponentPairOrBuilder> DataBuilder_;

      /**
       * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
       *
       * <pre>
       *_dateTimes is not necessary, we can always get it from _timestamps.
       * </pre>
       */
      public java.util.List<WorkloadStampsProto.KPICategoryKPIComponentPair> getDataList() {
        if (DataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(Data_);
        } else {
          return DataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
       *
       * <pre>
       *_dateTimes is not necessary, we can always get it from _timestamps.
       * </pre>
       */
      public int getDataCount() {
        if (DataBuilder_ == null) {
          return Data_.size();
        } else {
          return DataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
       *
       * <pre>
       *_dateTimes is not necessary, we can always get it from _timestamps.
       * </pre>
       */
      public WorkloadStampsProto.KPICategoryKPIComponentPair getData(int index) {
        if (DataBuilder_ == null) {
          return Data_.get(index);
        } else {
          return DataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
       *
       * <pre>
       *_dateTimes is not necessary, we can always get it from _timestamps.
       * </pre>
       */
      public Builder setData(
          int index, WorkloadStampsProto.KPICategoryKPIComponentPair value) {
        if (DataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          Data_.set(index, value);
          onChanged();
        } else {
          DataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
       *
       * <pre>
       *_dateTimes is not necessary, we can always get it from _timestamps.
       * </pre>
       */
      public Builder setData(
          int index, WorkloadStampsProto.KPICategoryKPIComponentPair.Builder builderForValue) {
        if (DataBuilder_ == null) {
          ensureDataIsMutable();
          Data_.set(index, builderForValue.build());
          onChanged();
        } else {
          DataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
       *
       * <pre>
       *_dateTimes is not necessary, we can always get it from _timestamps.
       * </pre>
       */
      public Builder addData(WorkloadStampsProto.KPICategoryKPIComponentPair value) {
        if (DataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          Data_.add(value);
          onChanged();
        } else {
          DataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
       *
       * <pre>
       *_dateTimes is not necessary, we can always get it from _timestamps.
       * </pre>
       */
      public Builder addData(
          int index, WorkloadStampsProto.KPICategoryKPIComponentPair value) {
        if (DataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          Data_.add(index, value);
          onChanged();
        } else {
          DataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
       *
       * <pre>
       *_dateTimes is not necessary, we can always get it from _timestamps.
       * </pre>
       */
      public Builder addData(
          WorkloadStampsProto.KPICategoryKPIComponentPair.Builder builderForValue) {
        if (DataBuilder_ == null) {
          ensureDataIsMutable();
          Data_.add(builderForValue.build());
          onChanged();
        } else {
          DataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
       *
       * <pre>
       *_dateTimes is not necessary, we can always get it from _timestamps.
       * </pre>
       */
      public Builder addData(
          int index, WorkloadStampsProto.KPICategoryKPIComponentPair.Builder builderForValue) {
        if (DataBuilder_ == null) {
          ensureDataIsMutable();
          Data_.add(index, builderForValue.build());
          onChanged();
        } else {
          DataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
       *
       * <pre>
       *_dateTimes is not necessary, we can always get it from _timestamps.
       * </pre>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends WorkloadStampsProto.KPICategoryKPIComponentPair> values) {
        if (DataBuilder_ == null) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, Data_);
          onChanged();
        } else {
          DataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
       *
       * <pre>
       *_dateTimes is not necessary, we can always get it from _timestamps.
       * </pre>
       */
      public Builder clearData() {
        if (DataBuilder_ == null) {
          Data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          DataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
       *
       * <pre>
       *_dateTimes is not necessary, we can always get it from _timestamps.
       * </pre>
       */
      public Builder removeData(int index) {
        if (DataBuilder_ == null) {
          ensureDataIsMutable();
          Data_.remove(index);
          onChanged();
        } else {
          DataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
       *
       * <pre>
       *_dateTimes is not necessary, we can always get it from _timestamps.
       * </pre>
       */
      public WorkloadStampsProto.KPICategoryKPIComponentPair.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
       *
       * <pre>
       *_dateTimes is not necessary, we can always get it from _timestamps.
       * </pre>
       */
      public WorkloadStampsProto.KPICategoryKPIComponentPairOrBuilder getDataOrBuilder(
          int index) {
        if (DataBuilder_ == null) {
          return Data_.get(index);  } else {
          return DataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
       *
       * <pre>
       *_dateTimes is not necessary, we can always get it from _timestamps.
       * </pre>
       */
      public java.util.List<? extends WorkloadStampsProto.KPICategoryKPIComponentPairOrBuilder> 
           getDataOrBuilderList() {
        if (DataBuilder_ != null) {
          return DataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(Data_);
        }
      }
      /**
       * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
       *
       * <pre>
       *_dateTimes is not necessary, we can always get it from _timestamps.
       * </pre>
       */
      public WorkloadStampsProto.KPICategoryKPIComponentPair.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            WorkloadStampsProto.KPICategoryKPIComponentPair.getDefaultInstance());
      }
      /**
       * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
       *
       * <pre>
       *_dateTimes is not necessary, we can always get it from _timestamps.
       * </pre>
       */
      public WorkloadStampsProto.KPICategoryKPIComponentPair.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, WorkloadStampsProto.KPICategoryKPIComponentPair.getDefaultInstance());
      }
      /**
       * <code>repeated .KPICategoryKPIComponentPair _data = 3;</code>
       *
       * <pre>
       *_dateTimes is not necessary, we can always get it from _timestamps.
       * </pre>
       */
      public java.util.List<WorkloadStampsProto.KPICategoryKPIComponentPair.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          WorkloadStampsProto.KPICategoryKPIComponentPair, WorkloadStampsProto.KPICategoryKPIComponentPair.Builder, WorkloadStampsProto.KPICategoryKPIComponentPairOrBuilder> 
          getDataFieldBuilder() {
        if (DataBuilder_ == null) {
          DataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              WorkloadStampsProto.KPICategoryKPIComponentPair, WorkloadStampsProto.KPICategoryKPIComponentPair.Builder, WorkloadStampsProto.KPICategoryKPIComponentPairOrBuilder>(
                  Data_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          Data_ = null;
        }
        return DataBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:WorkloadTimeStampsProto)
    }

    // @@protoc_insertion_point(class_scope:WorkloadTimeStampsProto)
    private static final WorkloadStampsProto.WorkloadTimeStampsProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new WorkloadStampsProto.WorkloadTimeStampsProto();
    }

    public static WorkloadStampsProto.WorkloadTimeStampsProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WorkloadTimeStampsProto>
        PARSER = new com.google.protobuf.AbstractParser<WorkloadTimeStampsProto>() {
      public WorkloadTimeStampsProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new WorkloadTimeStampsProto(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<WorkloadTimeStampsProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WorkloadTimeStampsProto> getParserForType() {
      return PARSER;
    }

    public WorkloadStampsProto.WorkloadTimeStampsProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KPIComponentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:KPIComponent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .KPICategory category = 1;</code>
     */
    int getCategoryValue();
    /**
     * <code>optional .KPICategory category = 1;</code>
     */
    WorkloadStampsProto.KPICategory getCategory();

    /**
     * <code>map&lt;string, .KPIInstance&gt; instances = 2;</code>
     */
    java.util.Map<java.lang.String, WorkloadStampsProto.KPIInstance>
    getInstances();

    /**
     * <code>repeated .KPIMetric metrics = 3;</code>
     */
    java.util.List<WorkloadStampsProto.KPIMetric> getMetricsList();
    /**
     * <code>repeated .KPIMetric metrics = 3;</code>
     */
    int getMetricsCount();
    /**
     * <code>repeated .KPIMetric metrics = 3;</code>
     */
    WorkloadStampsProto.KPIMetric getMetrics(int index);
    /**
     * <code>repeated .KPIMetric metrics = 3;</code>
     */
    java.util.List<java.lang.Integer>
    getMetricsValueList();
    /**
     * <code>repeated .KPIMetric metrics = 3;</code>
     */
    int getMetricsValue(int index);
  }
  /**
   * Protobuf type {@code KPIComponent}
   */
  public  static final class KPIComponent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:KPIComponent)
      KPIComponentOrBuilder {
    // Use KPIComponent.newBuilder() to construct.
    private KPIComponent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private KPIComponent() {
      category_ = 0;
      metrics_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private KPIComponent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              category_ = rawValue;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                instances_ = com.google.protobuf.MapField.newMapField(
                    InstancesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, WorkloadStampsProto.KPIInstance>
              instances = input.readMessage(
                  InstancesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              instances_.getMutableMap().put(instances.getKey(), instances.getValue());
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                metrics_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              metrics_.add(rawValue);
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  metrics_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000004;
                }
                metrics_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          metrics_ = java.util.Collections.unmodifiableList(metrics_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return WorkloadStampsProto.internal_static_KPIComponent_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetInstances();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return WorkloadStampsProto.internal_static_KPIComponent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              WorkloadStampsProto.KPIComponent.class, WorkloadStampsProto.KPIComponent.Builder.class);
    }

    private int bitField0_;
    public static final int CATEGORY_FIELD_NUMBER = 1;
    private int category_;
    /**
     * <code>optional .KPICategory category = 1;</code>
     */
    public int getCategoryValue() {
      return category_;
    }
    /**
     * <code>optional .KPICategory category = 1;</code>
     */
    public WorkloadStampsProto.KPICategory getCategory() {
      WorkloadStampsProto.KPICategory result = WorkloadStampsProto.KPICategory.valueOf(category_);
      return result == null ? WorkloadStampsProto.KPICategory.UNRECOGNIZED : result;
    }

    public static final int INSTANCES_FIELD_NUMBER = 2;
    private static final class InstancesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, WorkloadStampsProto.KPIInstance> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, WorkloadStampsProto.KPIInstance>newDefaultInstance(
                  WorkloadStampsProto.internal_static_KPIComponent_InstancesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  WorkloadStampsProto.KPIInstance.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, WorkloadStampsProto.KPIInstance> instances_;
    private com.google.protobuf.MapField<java.lang.String, WorkloadStampsProto.KPIInstance>
    internalGetInstances() {
      if (instances_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            InstancesDefaultEntryHolder.defaultEntry);
     }
      return instances_;
    }
    /**
     * <code>map&lt;string, .KPIInstance&gt; instances = 2;</code>
     */

    public java.util.Map<java.lang.String, WorkloadStampsProto.KPIInstance> getInstances() {
      return internalGetInstances().getMap();
    }

    public static final int METRICS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> metrics_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, WorkloadStampsProto.KPIMetric> metrics_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, WorkloadStampsProto.KPIMetric>() {
              public WorkloadStampsProto.KPIMetric convert(java.lang.Integer from) {
                WorkloadStampsProto.KPIMetric result = WorkloadStampsProto.KPIMetric.valueOf(from);
                return result == null ? WorkloadStampsProto.KPIMetric.UNRECOGNIZED : result;
              }
            };
    /**
     * <code>repeated .KPIMetric metrics = 3;</code>
     */
    public java.util.List<WorkloadStampsProto.KPIMetric> getMetricsList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, WorkloadStampsProto.KPIMetric>(metrics_, metrics_converter_);
    }
    /**
     * <code>repeated .KPIMetric metrics = 3;</code>
     */
    public int getMetricsCount() {
      return metrics_.size();
    }
    /**
     * <code>repeated .KPIMetric metrics = 3;</code>
     */
    public WorkloadStampsProto.KPIMetric getMetrics(int index) {
      return metrics_converter_.convert(metrics_.get(index));
    }
    /**
     * <code>repeated .KPIMetric metrics = 3;</code>
     */
    public java.util.List<java.lang.Integer>
    getMetricsValueList() {
      return metrics_;
    }
    /**
     * <code>repeated .KPIMetric metrics = 3;</code>
     */
    public int getMetricsValue(int index) {
      return metrics_.get(index);
    }
    private int metricsMemoizedSerializedSize;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (category_ != WorkloadStampsProto.KPICategory.ARRAY.getNumber()) {
        output.writeEnum(1, category_);
      }
      for (java.util.Map.Entry<java.lang.String, WorkloadStampsProto.KPIInstance> entry
           : internalGetInstances().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, WorkloadStampsProto.KPIInstance>
        instances = InstancesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        output.writeMessage(2, instances);
      }
      if (getMetricsList().size() > 0) {
        output.writeRawVarint32(26);
        output.writeRawVarint32(metricsMemoizedSerializedSize);
      }
      for (int i = 0; i < metrics_.size(); i++) {
        output.writeEnumNoTag(metrics_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (category_ != WorkloadStampsProto.KPICategory.ARRAY.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, category_);
      }
      for (java.util.Map.Entry<java.lang.String, WorkloadStampsProto.KPIInstance> entry
           : internalGetInstances().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, WorkloadStampsProto.KPIInstance>
        instances = InstancesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, instances);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < metrics_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(metrics_.get(i));
        }
        size += dataSize;
        if (!getMetricsList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeRawVarint32Size(dataSize);
        }metricsMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static WorkloadStampsProto.KPIComponent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static WorkloadStampsProto.KPIComponent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static WorkloadStampsProto.KPIComponent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static WorkloadStampsProto.KPIComponent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static WorkloadStampsProto.KPIComponent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static WorkloadStampsProto.KPIComponent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static WorkloadStampsProto.KPIComponent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static WorkloadStampsProto.KPIComponent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static WorkloadStampsProto.KPIComponent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static WorkloadStampsProto.KPIComponent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(WorkloadStampsProto.KPIComponent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code KPIComponent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:KPIComponent)
        WorkloadStampsProto.KPIComponentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return WorkloadStampsProto.internal_static_KPIComponent_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetInstances();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableInstances();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return WorkloadStampsProto.internal_static_KPIComponent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                WorkloadStampsProto.KPIComponent.class, WorkloadStampsProto.KPIComponent.Builder.class);
      }

      // Construct using WorkloadStampsProto.KPIComponent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        category_ = 0;

        internalGetMutableInstances().clear();
        metrics_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return WorkloadStampsProto.internal_static_KPIComponent_descriptor;
      }

      public WorkloadStampsProto.KPIComponent getDefaultInstanceForType() {
        return WorkloadStampsProto.KPIComponent.getDefaultInstance();
      }

      public WorkloadStampsProto.KPIComponent build() {
        WorkloadStampsProto.KPIComponent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public WorkloadStampsProto.KPIComponent buildPartial() {
        WorkloadStampsProto.KPIComponent result = new WorkloadStampsProto.KPIComponent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.category_ = category_;
        result.instances_ = internalGetInstances();
        result.instances_.makeImmutable();
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          metrics_ = java.util.Collections.unmodifiableList(metrics_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.metrics_ = metrics_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof WorkloadStampsProto.KPIComponent) {
          return mergeFrom((WorkloadStampsProto.KPIComponent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(WorkloadStampsProto.KPIComponent other) {
        if (other == WorkloadStampsProto.KPIComponent.getDefaultInstance()) return this;
        if (other.category_ != 0) {
          setCategoryValue(other.getCategoryValue());
        }
        internalGetMutableInstances().mergeFrom(
            other.internalGetInstances());
        if (!other.metrics_.isEmpty()) {
          if (metrics_.isEmpty()) {
            metrics_ = other.metrics_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureMetricsIsMutable();
            metrics_.addAll(other.metrics_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        WorkloadStampsProto.KPIComponent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (WorkloadStampsProto.KPIComponent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int category_ = 0;
      /**
       * <code>optional .KPICategory category = 1;</code>
       */
      public int getCategoryValue() {
        return category_;
      }
      /**
       * <code>optional .KPICategory category = 1;</code>
       */
      public Builder setCategoryValue(int value) {
        category_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .KPICategory category = 1;</code>
       */
      public WorkloadStampsProto.KPICategory getCategory() {
        WorkloadStampsProto.KPICategory result = WorkloadStampsProto.KPICategory.valueOf(category_);
        return result == null ? WorkloadStampsProto.KPICategory.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .KPICategory category = 1;</code>
       */
      public Builder setCategory(WorkloadStampsProto.KPICategory value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        category_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .KPICategory category = 1;</code>
       */
      public Builder clearCategory() {
        
        category_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, WorkloadStampsProto.KPIInstance> instances_;
      private com.google.protobuf.MapField<java.lang.String, WorkloadStampsProto.KPIInstance>
      internalGetInstances() {
        if (instances_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              InstancesDefaultEntryHolder.defaultEntry);
       }
        return instances_;
      }
      private com.google.protobuf.MapField<java.lang.String, WorkloadStampsProto.KPIInstance>
      internalGetMutableInstances() {
        onChanged();;
        if (instances_ == null) {
          instances_ = com.google.protobuf.MapField.newMapField(
              InstancesDefaultEntryHolder.defaultEntry);
        }
        if (!instances_.isMutable()) {
          instances_ = instances_.copy();
        }
        return instances_;
      }
      /**
       * <code>map&lt;string, .KPIInstance&gt; instances = 2;</code>
       */
      public java.util.Map<java.lang.String, WorkloadStampsProto.KPIInstance> getInstances() {
        return internalGetInstances().getMap();
      }
      /**
       * <code>map&lt;string, .KPIInstance&gt; instances = 2;</code>
       */
      public java.util.Map<java.lang.String, WorkloadStampsProto.KPIInstance>
      getMutableInstances() {
        return internalGetMutableInstances().getMutableMap();
      }
      /**
       * <code>map&lt;string, .KPIInstance&gt; instances = 2;</code>
       */
      public Builder putAllInstances(
          java.util.Map<java.lang.String, WorkloadStampsProto.KPIInstance> values) {
        getMutableInstances().putAll(values);
        return this;
      }

      private java.util.List<java.lang.Integer> metrics_ =
        java.util.Collections.emptyList();
      private void ensureMetricsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          metrics_ = new java.util.ArrayList<java.lang.Integer>(metrics_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <code>repeated .KPIMetric metrics = 3;</code>
       */
      public java.util.List<WorkloadStampsProto.KPIMetric> getMetricsList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, WorkloadStampsProto.KPIMetric>(metrics_, metrics_converter_);
      }
      /**
       * <code>repeated .KPIMetric metrics = 3;</code>
       */
      public int getMetricsCount() {
        return metrics_.size();
      }
      /**
       * <code>repeated .KPIMetric metrics = 3;</code>
       */
      public WorkloadStampsProto.KPIMetric getMetrics(int index) {
        return metrics_converter_.convert(metrics_.get(index));
      }
      /**
       * <code>repeated .KPIMetric metrics = 3;</code>
       */
      public Builder setMetrics(
          int index, WorkloadStampsProto.KPIMetric value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetricsIsMutable();
        metrics_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .KPIMetric metrics = 3;</code>
       */
      public Builder addMetrics(WorkloadStampsProto.KPIMetric value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetricsIsMutable();
        metrics_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .KPIMetric metrics = 3;</code>
       */
      public Builder addAllMetrics(
          java.lang.Iterable<? extends WorkloadStampsProto.KPIMetric> values) {
        ensureMetricsIsMutable();
        for (WorkloadStampsProto.KPIMetric value : values) {
          metrics_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <code>repeated .KPIMetric metrics = 3;</code>
       */
      public Builder clearMetrics() {
        metrics_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .KPIMetric metrics = 3;</code>
       */
      public java.util.List<java.lang.Integer>
      getMetricsValueList() {
        return java.util.Collections.unmodifiableList(metrics_);
      }
      /**
       * <code>repeated .KPIMetric metrics = 3;</code>
       */
      public int getMetricsValue(int index) {
        return metrics_.get(index);
      }
      /**
       * <code>repeated .KPIMetric metrics = 3;</code>
       */
      public Builder setMetricsValue(
          int index, int value) {
        ensureMetricsIsMutable();
        metrics_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .KPIMetric metrics = 3;</code>
       */
      public Builder addMetricsValue(int value) {
        ensureMetricsIsMutable();
        metrics_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .KPIMetric metrics = 3;</code>
       */
      public Builder addAllMetricsValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureMetricsIsMutable();
        for (int value : values) {
          metrics_.add(value);
        }
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:KPIComponent)
    }

    // @@protoc_insertion_point(class_scope:KPIComponent)
    private static final WorkloadStampsProto.KPIComponent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new WorkloadStampsProto.KPIComponent();
    }

    public static WorkloadStampsProto.KPIComponent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KPIComponent>
        PARSER = new com.google.protobuf.AbstractParser<KPIComponent>() {
      public KPIComponent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new KPIComponent(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<KPIComponent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KPIComponent> getParserForType() {
      return PARSER;
    }

    public WorkloadStampsProto.KPIComponent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KPIInstanceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:KPIInstance)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
     */
    java.util.List<WorkloadStampsProto.KPIMetricDoubleArrayPair> 
        getValuesList();
    /**
     * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
     */
    WorkloadStampsProto.KPIMetricDoubleArrayPair getValues(int index);
    /**
     * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
     */
    int getValuesCount();
    /**
     * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
     */
    java.util.List<? extends WorkloadStampsProto.KPIMetricDoubleArrayPairOrBuilder> 
        getValuesOrBuilderList();
    /**
     * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
     */
    WorkloadStampsProto.KPIMetricDoubleArrayPairOrBuilder getValuesOrBuilder(
        int index);

    /**
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional .KPICategory category = 3;</code>
     */
    int getCategoryValue();
    /**
     * <code>optional .KPICategory category = 3;</code>
     */
    WorkloadStampsProto.KPICategory getCategory();
  }
  /**
   * Protobuf type {@code KPIInstance}
   */
  public  static final class KPIInstance extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:KPIInstance)
      KPIInstanceOrBuilder {
    // Use KPIInstance.newBuilder() to construct.
    private KPIInstance(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private KPIInstance() {
      values_ = java.util.Collections.emptyList();
      name_ = "";
      category_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private KPIInstance(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                values_ = new java.util.ArrayList<WorkloadStampsProto.KPIMetricDoubleArrayPair>();
                mutable_bitField0_ |= 0x00000001;
              }
              values_.add(input.readMessage(WorkloadStampsProto.KPIMetricDoubleArrayPair.parser(), extensionRegistry));
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              category_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          values_ = java.util.Collections.unmodifiableList(values_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return WorkloadStampsProto.internal_static_KPIInstance_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return WorkloadStampsProto.internal_static_KPIInstance_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              WorkloadStampsProto.KPIInstance.class, WorkloadStampsProto.KPIInstance.Builder.class);
    }

    private int bitField0_;
    public static final int VALUES_FIELD_NUMBER = 1;
    private java.util.List<WorkloadStampsProto.KPIMetricDoubleArrayPair> values_;
    /**
     * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
     */
    public java.util.List<WorkloadStampsProto.KPIMetricDoubleArrayPair> getValuesList() {
      return values_;
    }
    /**
     * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
     */
    public java.util.List<? extends WorkloadStampsProto.KPIMetricDoubleArrayPairOrBuilder> 
        getValuesOrBuilderList() {
      return values_;
    }
    /**
     * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
     */
    public WorkloadStampsProto.KPIMetricDoubleArrayPair getValues(int index) {
      return values_.get(index);
    }
    /**
     * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
     */
    public WorkloadStampsProto.KPIMetricDoubleArrayPairOrBuilder getValuesOrBuilder(
        int index) {
      return values_.get(index);
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 3;
    private int category_;
    /**
     * <code>optional .KPICategory category = 3;</code>
     */
    public int getCategoryValue() {
      return category_;
    }
    /**
     * <code>optional .KPICategory category = 3;</code>
     */
    public WorkloadStampsProto.KPICategory getCategory() {
      WorkloadStampsProto.KPICategory result = WorkloadStampsProto.KPICategory.valueOf(category_);
      return result == null ? WorkloadStampsProto.KPICategory.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < values_.size(); i++) {
        output.writeMessage(1, values_.get(i));
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, name_);
      }
      if (category_ != WorkloadStampsProto.KPICategory.ARRAY.getNumber()) {
        output.writeEnum(3, category_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < values_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, values_.get(i));
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, name_);
      }
      if (category_ != WorkloadStampsProto.KPICategory.ARRAY.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, category_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static WorkloadStampsProto.KPIInstance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static WorkloadStampsProto.KPIInstance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static WorkloadStampsProto.KPIInstance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static WorkloadStampsProto.KPIInstance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static WorkloadStampsProto.KPIInstance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static WorkloadStampsProto.KPIInstance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static WorkloadStampsProto.KPIInstance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static WorkloadStampsProto.KPIInstance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static WorkloadStampsProto.KPIInstance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static WorkloadStampsProto.KPIInstance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(WorkloadStampsProto.KPIInstance prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code KPIInstance}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:KPIInstance)
        WorkloadStampsProto.KPIInstanceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return WorkloadStampsProto.internal_static_KPIInstance_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return WorkloadStampsProto.internal_static_KPIInstance_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                WorkloadStampsProto.KPIInstance.class, WorkloadStampsProto.KPIInstance.Builder.class);
      }

      // Construct using WorkloadStampsProto.KPIInstance.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValuesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (valuesBuilder_ == null) {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          valuesBuilder_.clear();
        }
        name_ = "";

        category_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return WorkloadStampsProto.internal_static_KPIInstance_descriptor;
      }

      public WorkloadStampsProto.KPIInstance getDefaultInstanceForType() {
        return WorkloadStampsProto.KPIInstance.getDefaultInstance();
      }

      public WorkloadStampsProto.KPIInstance build() {
        WorkloadStampsProto.KPIInstance result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public WorkloadStampsProto.KPIInstance buildPartial() {
        WorkloadStampsProto.KPIInstance result = new WorkloadStampsProto.KPIInstance(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (valuesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            values_ = java.util.Collections.unmodifiableList(values_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.values_ = values_;
        } else {
          result.values_ = valuesBuilder_.build();
        }
        result.name_ = name_;
        result.category_ = category_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof WorkloadStampsProto.KPIInstance) {
          return mergeFrom((WorkloadStampsProto.KPIInstance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(WorkloadStampsProto.KPIInstance other) {
        if (other == WorkloadStampsProto.KPIInstance.getDefaultInstance()) return this;
        if (valuesBuilder_ == null) {
          if (!other.values_.isEmpty()) {
            if (values_.isEmpty()) {
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureValuesIsMutable();
              values_.addAll(other.values_);
            }
            onChanged();
          }
        } else {
          if (!other.values_.isEmpty()) {
            if (valuesBuilder_.isEmpty()) {
              valuesBuilder_.dispose();
              valuesBuilder_ = null;
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000001);
              valuesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValuesFieldBuilder() : null;
            } else {
              valuesBuilder_.addAllMessages(other.values_);
            }
          }
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.category_ != 0) {
          setCategoryValue(other.getCategoryValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        WorkloadStampsProto.KPIInstance parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (WorkloadStampsProto.KPIInstance) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<WorkloadStampsProto.KPIMetricDoubleArrayPair> values_ =
        java.util.Collections.emptyList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          values_ = new java.util.ArrayList<WorkloadStampsProto.KPIMetricDoubleArrayPair>(values_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          WorkloadStampsProto.KPIMetricDoubleArrayPair, WorkloadStampsProto.KPIMetricDoubleArrayPair.Builder, WorkloadStampsProto.KPIMetricDoubleArrayPairOrBuilder> valuesBuilder_;

      /**
       * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
       */
      public java.util.List<WorkloadStampsProto.KPIMetricDoubleArrayPair> getValuesList() {
        if (valuesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(values_);
        } else {
          return valuesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
       */
      public int getValuesCount() {
        if (valuesBuilder_ == null) {
          return values_.size();
        } else {
          return valuesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
       */
      public WorkloadStampsProto.KPIMetricDoubleArrayPair getValues(int index) {
        if (valuesBuilder_ == null) {
          return values_.get(index);
        } else {
          return valuesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
       */
      public Builder setValues(
          int index, WorkloadStampsProto.KPIMetricDoubleArrayPair value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.set(index, value);
          onChanged();
        } else {
          valuesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
       */
      public Builder setValues(
          int index, WorkloadStampsProto.KPIMetricDoubleArrayPair.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.set(index, builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
       */
      public Builder addValues(WorkloadStampsProto.KPIMetricDoubleArrayPair value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.add(value);
          onChanged();
        } else {
          valuesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
       */
      public Builder addValues(
          int index, WorkloadStampsProto.KPIMetricDoubleArrayPair value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.add(index, value);
          onChanged();
        } else {
          valuesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
       */
      public Builder addValues(
          WorkloadStampsProto.KPIMetricDoubleArrayPair.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.add(builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
       */
      public Builder addValues(
          int index, WorkloadStampsProto.KPIMetricDoubleArrayPair.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.add(index, builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends WorkloadStampsProto.KPIMetricDoubleArrayPair> values) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, values_);
          onChanged();
        } else {
          valuesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
       */
      public Builder clearValues() {
        if (valuesBuilder_ == null) {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          valuesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
       */
      public Builder removeValues(int index) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.remove(index);
          onChanged();
        } else {
          valuesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
       */
      public WorkloadStampsProto.KPIMetricDoubleArrayPair.Builder getValuesBuilder(
          int index) {
        return getValuesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
       */
      public WorkloadStampsProto.KPIMetricDoubleArrayPairOrBuilder getValuesOrBuilder(
          int index) {
        if (valuesBuilder_ == null) {
          return values_.get(index);  } else {
          return valuesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
       */
      public java.util.List<? extends WorkloadStampsProto.KPIMetricDoubleArrayPairOrBuilder> 
           getValuesOrBuilderList() {
        if (valuesBuilder_ != null) {
          return valuesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(values_);
        }
      }
      /**
       * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
       */
      public WorkloadStampsProto.KPIMetricDoubleArrayPair.Builder addValuesBuilder() {
        return getValuesFieldBuilder().addBuilder(
            WorkloadStampsProto.KPIMetricDoubleArrayPair.getDefaultInstance());
      }
      /**
       * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
       */
      public WorkloadStampsProto.KPIMetricDoubleArrayPair.Builder addValuesBuilder(
          int index) {
        return getValuesFieldBuilder().addBuilder(
            index, WorkloadStampsProto.KPIMetricDoubleArrayPair.getDefaultInstance());
      }
      /**
       * <code>repeated .KPIMetricDoubleArrayPair values = 1;</code>
       */
      public java.util.List<WorkloadStampsProto.KPIMetricDoubleArrayPair.Builder> 
           getValuesBuilderList() {
        return getValuesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          WorkloadStampsProto.KPIMetricDoubleArrayPair, WorkloadStampsProto.KPIMetricDoubleArrayPair.Builder, WorkloadStampsProto.KPIMetricDoubleArrayPairOrBuilder> 
          getValuesFieldBuilder() {
        if (valuesBuilder_ == null) {
          valuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              WorkloadStampsProto.KPIMetricDoubleArrayPair, WorkloadStampsProto.KPIMetricDoubleArrayPair.Builder, WorkloadStampsProto.KPIMetricDoubleArrayPairOrBuilder>(
                  values_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          values_ = null;
        }
        return valuesBuilder_;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int category_ = 0;
      /**
       * <code>optional .KPICategory category = 3;</code>
       */
      public int getCategoryValue() {
        return category_;
      }
      /**
       * <code>optional .KPICategory category = 3;</code>
       */
      public Builder setCategoryValue(int value) {
        category_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .KPICategory category = 3;</code>
       */
      public WorkloadStampsProto.KPICategory getCategory() {
        WorkloadStampsProto.KPICategory result = WorkloadStampsProto.KPICategory.valueOf(category_);
        return result == null ? WorkloadStampsProto.KPICategory.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .KPICategory category = 3;</code>
       */
      public Builder setCategory(WorkloadStampsProto.KPICategory value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        category_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .KPICategory category = 3;</code>
       */
      public Builder clearCategory() {
        
        category_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:KPIInstance)
    }

    // @@protoc_insertion_point(class_scope:KPIInstance)
    private static final WorkloadStampsProto.KPIInstance DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new WorkloadStampsProto.KPIInstance();
    }

    public static WorkloadStampsProto.KPIInstance getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KPIInstance>
        PARSER = new com.google.protobuf.AbstractParser<KPIInstance>() {
      public KPIInstance parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new KPIInstance(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<KPIInstance> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KPIInstance> getParserForType() {
      return PARSER;
    }

    public WorkloadStampsProto.KPIInstance getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KPIMetricDoubleArrayPairOrBuilder extends
      // @@protoc_insertion_point(interface_extends:KPIMetricDoubleArrayPair)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .KPIMetric key = 1;</code>
     */
    int getKeyValue();
    /**
     * <code>optional .KPIMetric key = 1;</code>
     */
    WorkloadStampsProto.KPIMetric getKey();

    /**
     * <code>optional .DoubleArray value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .DoubleArray value = 2;</code>
     */
    WorkloadStampsProto.DoubleArray getValue();
    /**
     * <code>optional .DoubleArray value = 2;</code>
     */
    WorkloadStampsProto.DoubleArrayOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code KPIMetricDoubleArrayPair}
   */
  public  static final class KPIMetricDoubleArrayPair extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:KPIMetricDoubleArrayPair)
      KPIMetricDoubleArrayPairOrBuilder {
    // Use KPIMetricDoubleArrayPair.newBuilder() to construct.
    private KPIMetricDoubleArrayPair(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private KPIMetricDoubleArrayPair() {
      key_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private KPIMetricDoubleArrayPair(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              key_ = rawValue;
              break;
            }
            case 18: {
              WorkloadStampsProto.DoubleArray.Builder subBuilder = null;
              if (value_ != null) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(WorkloadStampsProto.DoubleArray.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return WorkloadStampsProto.internal_static_KPIMetricDoubleArrayPair_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return WorkloadStampsProto.internal_static_KPIMetricDoubleArrayPair_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              WorkloadStampsProto.KPIMetricDoubleArrayPair.class, WorkloadStampsProto.KPIMetricDoubleArrayPair.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private int key_;
    /**
     * <code>optional .KPIMetric key = 1;</code>
     */
    public int getKeyValue() {
      return key_;
    }
    /**
     * <code>optional .KPIMetric key = 1;</code>
     */
    public WorkloadStampsProto.KPIMetric getKey() {
      WorkloadStampsProto.KPIMetric result = WorkloadStampsProto.KPIMetric.valueOf(key_);
      return result == null ? WorkloadStampsProto.KPIMetric.UNRECOGNIZED : result;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private WorkloadStampsProto.DoubleArray value_;
    /**
     * <code>optional .DoubleArray value = 2;</code>
     */
    public boolean hasValue() {
      return value_ != null;
    }
    /**
     * <code>optional .DoubleArray value = 2;</code>
     */
    public WorkloadStampsProto.DoubleArray getValue() {
      return value_ == null ? WorkloadStampsProto.DoubleArray.getDefaultInstance() : value_;
    }
    /**
     * <code>optional .DoubleArray value = 2;</code>
     */
    public WorkloadStampsProto.DoubleArrayOrBuilder getValueOrBuilder() {
      return getValue();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (key_ != WorkloadStampsProto.KPIMetric.im_dir_memory_page_fall_through_time_total.getNumber()) {
        output.writeEnum(1, key_);
      }
      if (value_ != null) {
        output.writeMessage(2, getValue());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (key_ != WorkloadStampsProto.KPIMetric.im_dir_memory_page_fall_through_time_total.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, key_);
      }
      if (value_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getValue());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static WorkloadStampsProto.KPIMetricDoubleArrayPair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static WorkloadStampsProto.KPIMetricDoubleArrayPair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static WorkloadStampsProto.KPIMetricDoubleArrayPair parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static WorkloadStampsProto.KPIMetricDoubleArrayPair parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static WorkloadStampsProto.KPIMetricDoubleArrayPair parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static WorkloadStampsProto.KPIMetricDoubleArrayPair parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static WorkloadStampsProto.KPIMetricDoubleArrayPair parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static WorkloadStampsProto.KPIMetricDoubleArrayPair parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static WorkloadStampsProto.KPIMetricDoubleArrayPair parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static WorkloadStampsProto.KPIMetricDoubleArrayPair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(WorkloadStampsProto.KPIMetricDoubleArrayPair prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code KPIMetricDoubleArrayPair}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:KPIMetricDoubleArrayPair)
        WorkloadStampsProto.KPIMetricDoubleArrayPairOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return WorkloadStampsProto.internal_static_KPIMetricDoubleArrayPair_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return WorkloadStampsProto.internal_static_KPIMetricDoubleArrayPair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                WorkloadStampsProto.KPIMetricDoubleArrayPair.class, WorkloadStampsProto.KPIMetricDoubleArrayPair.Builder.class);
      }

      // Construct using WorkloadStampsProto.KPIMetricDoubleArrayPair.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        key_ = 0;

        if (valueBuilder_ == null) {
          value_ = null;
        } else {
          value_ = null;
          valueBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return WorkloadStampsProto.internal_static_KPIMetricDoubleArrayPair_descriptor;
      }

      public WorkloadStampsProto.KPIMetricDoubleArrayPair getDefaultInstanceForType() {
        return WorkloadStampsProto.KPIMetricDoubleArrayPair.getDefaultInstance();
      }

      public WorkloadStampsProto.KPIMetricDoubleArrayPair build() {
        WorkloadStampsProto.KPIMetricDoubleArrayPair result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public WorkloadStampsProto.KPIMetricDoubleArrayPair buildPartial() {
        WorkloadStampsProto.KPIMetricDoubleArrayPair result = new WorkloadStampsProto.KPIMetricDoubleArrayPair(this);
        result.key_ = key_;
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof WorkloadStampsProto.KPIMetricDoubleArrayPair) {
          return mergeFrom((WorkloadStampsProto.KPIMetricDoubleArrayPair)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(WorkloadStampsProto.KPIMetricDoubleArrayPair other) {
        if (other == WorkloadStampsProto.KPIMetricDoubleArrayPair.getDefaultInstance()) return this;
        if (other.key_ != 0) {
          setKeyValue(other.getKeyValue());
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        WorkloadStampsProto.KPIMetricDoubleArrayPair parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (WorkloadStampsProto.KPIMetricDoubleArrayPair) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int key_ = 0;
      /**
       * <code>optional .KPIMetric key = 1;</code>
       */
      public int getKeyValue() {
        return key_;
      }
      /**
       * <code>optional .KPIMetric key = 1;</code>
       */
      public Builder setKeyValue(int value) {
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .KPIMetric key = 1;</code>
       */
      public WorkloadStampsProto.KPIMetric getKey() {
        WorkloadStampsProto.KPIMetric result = WorkloadStampsProto.KPIMetric.valueOf(key_);
        return result == null ? WorkloadStampsProto.KPIMetric.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .KPIMetric key = 1;</code>
       */
      public Builder setKey(WorkloadStampsProto.KPIMetric value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        key_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .KPIMetric key = 1;</code>
       */
      public Builder clearKey() {
        
        key_ = 0;
        onChanged();
        return this;
      }

      private WorkloadStampsProto.DoubleArray value_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          WorkloadStampsProto.DoubleArray, WorkloadStampsProto.DoubleArray.Builder, WorkloadStampsProto.DoubleArrayOrBuilder> valueBuilder_;
      /**
       * <code>optional .DoubleArray value = 2;</code>
       */
      public boolean hasValue() {
        return valueBuilder_ != null || value_ != null;
      }
      /**
       * <code>optional .DoubleArray value = 2;</code>
       */
      public WorkloadStampsProto.DoubleArray getValue() {
        if (valueBuilder_ == null) {
          return value_ == null ? WorkloadStampsProto.DoubleArray.getDefaultInstance() : value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .DoubleArray value = 2;</code>
       */
      public Builder setValue(WorkloadStampsProto.DoubleArray value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .DoubleArray value = 2;</code>
       */
      public Builder setValue(
          WorkloadStampsProto.DoubleArray.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .DoubleArray value = 2;</code>
       */
      public Builder mergeValue(WorkloadStampsProto.DoubleArray value) {
        if (valueBuilder_ == null) {
          if (value_ != null) {
            value_ =
              WorkloadStampsProto.DoubleArray.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .DoubleArray value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = null;
          onChanged();
        } else {
          value_ = null;
          valueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .DoubleArray value = 2;</code>
       */
      public WorkloadStampsProto.DoubleArray.Builder getValueBuilder() {
        
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .DoubleArray value = 2;</code>
       */
      public WorkloadStampsProto.DoubleArrayOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_ == null ?
              WorkloadStampsProto.DoubleArray.getDefaultInstance() : value_;
        }
      }
      /**
       * <code>optional .DoubleArray value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          WorkloadStampsProto.DoubleArray, WorkloadStampsProto.DoubleArray.Builder, WorkloadStampsProto.DoubleArrayOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              WorkloadStampsProto.DoubleArray, WorkloadStampsProto.DoubleArray.Builder, WorkloadStampsProto.DoubleArrayOrBuilder>(
                  getValue(),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:KPIMetricDoubleArrayPair)
    }

    // @@protoc_insertion_point(class_scope:KPIMetricDoubleArrayPair)
    private static final WorkloadStampsProto.KPIMetricDoubleArrayPair DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new WorkloadStampsProto.KPIMetricDoubleArrayPair();
    }

    public static WorkloadStampsProto.KPIMetricDoubleArrayPair getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KPIMetricDoubleArrayPair>
        PARSER = new com.google.protobuf.AbstractParser<KPIMetricDoubleArrayPair>() {
      public KPIMetricDoubleArrayPair parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new KPIMetricDoubleArrayPair(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<KPIMetricDoubleArrayPair> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KPIMetricDoubleArrayPair> getParserForType() {
      return PARSER;
    }

    public WorkloadStampsProto.KPIMetricDoubleArrayPair getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KPICategoryKPIComponentPairOrBuilder extends
      // @@protoc_insertion_point(interface_extends:KPICategoryKPIComponentPair)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .KPICategory key = 1;</code>
     */
    int getKeyValue();
    /**
     * <code>optional .KPICategory key = 1;</code>
     */
    WorkloadStampsProto.KPICategory getKey();

    /**
     * <code>optional .KPIComponent value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .KPIComponent value = 2;</code>
     */
    WorkloadStampsProto.KPIComponent getValue();
    /**
     * <code>optional .KPIComponent value = 2;</code>
     */
    WorkloadStampsProto.KPIComponentOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code KPICategoryKPIComponentPair}
   */
  public  static final class KPICategoryKPIComponentPair extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:KPICategoryKPIComponentPair)
      KPICategoryKPIComponentPairOrBuilder {
    // Use KPICategoryKPIComponentPair.newBuilder() to construct.
    private KPICategoryKPIComponentPair(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private KPICategoryKPIComponentPair() {
      key_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private KPICategoryKPIComponentPair(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              key_ = rawValue;
              break;
            }
            case 18: {
              WorkloadStampsProto.KPIComponent.Builder subBuilder = null;
              if (value_ != null) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(WorkloadStampsProto.KPIComponent.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return WorkloadStampsProto.internal_static_KPICategoryKPIComponentPair_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return WorkloadStampsProto.internal_static_KPICategoryKPIComponentPair_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              WorkloadStampsProto.KPICategoryKPIComponentPair.class, WorkloadStampsProto.KPICategoryKPIComponentPair.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private int key_;
    /**
     * <code>optional .KPICategory key = 1;</code>
     */
    public int getKeyValue() {
      return key_;
    }
    /**
     * <code>optional .KPICategory key = 1;</code>
     */
    public WorkloadStampsProto.KPICategory getKey() {
      WorkloadStampsProto.KPICategory result = WorkloadStampsProto.KPICategory.valueOf(key_);
      return result == null ? WorkloadStampsProto.KPICategory.UNRECOGNIZED : result;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private WorkloadStampsProto.KPIComponent value_;
    /**
     * <code>optional .KPIComponent value = 2;</code>
     */
    public boolean hasValue() {
      return value_ != null;
    }
    /**
     * <code>optional .KPIComponent value = 2;</code>
     */
    public WorkloadStampsProto.KPIComponent getValue() {
      return value_ == null ? WorkloadStampsProto.KPIComponent.getDefaultInstance() : value_;
    }
    /**
     * <code>optional .KPIComponent value = 2;</code>
     */
    public WorkloadStampsProto.KPIComponentOrBuilder getValueOrBuilder() {
      return getValue();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (key_ != WorkloadStampsProto.KPICategory.ARRAY.getNumber()) {
        output.writeEnum(1, key_);
      }
      if (value_ != null) {
        output.writeMessage(2, getValue());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (key_ != WorkloadStampsProto.KPICategory.ARRAY.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, key_);
      }
      if (value_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getValue());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static WorkloadStampsProto.KPICategoryKPIComponentPair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static WorkloadStampsProto.KPICategoryKPIComponentPair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static WorkloadStampsProto.KPICategoryKPIComponentPair parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static WorkloadStampsProto.KPICategoryKPIComponentPair parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static WorkloadStampsProto.KPICategoryKPIComponentPair parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static WorkloadStampsProto.KPICategoryKPIComponentPair parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static WorkloadStampsProto.KPICategoryKPIComponentPair parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static WorkloadStampsProto.KPICategoryKPIComponentPair parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static WorkloadStampsProto.KPICategoryKPIComponentPair parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static WorkloadStampsProto.KPICategoryKPIComponentPair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(WorkloadStampsProto.KPICategoryKPIComponentPair prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code KPICategoryKPIComponentPair}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:KPICategoryKPIComponentPair)
        WorkloadStampsProto.KPICategoryKPIComponentPairOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return WorkloadStampsProto.internal_static_KPICategoryKPIComponentPair_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return WorkloadStampsProto.internal_static_KPICategoryKPIComponentPair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                WorkloadStampsProto.KPICategoryKPIComponentPair.class, WorkloadStampsProto.KPICategoryKPIComponentPair.Builder.class);
      }

      // Construct using WorkloadStampsProto.KPICategoryKPIComponentPair.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        key_ = 0;

        if (valueBuilder_ == null) {
          value_ = null;
        } else {
          value_ = null;
          valueBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return WorkloadStampsProto.internal_static_KPICategoryKPIComponentPair_descriptor;
      }

      public WorkloadStampsProto.KPICategoryKPIComponentPair getDefaultInstanceForType() {
        return WorkloadStampsProto.KPICategoryKPIComponentPair.getDefaultInstance();
      }

      public WorkloadStampsProto.KPICategoryKPIComponentPair build() {
        WorkloadStampsProto.KPICategoryKPIComponentPair result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public WorkloadStampsProto.KPICategoryKPIComponentPair buildPartial() {
        WorkloadStampsProto.KPICategoryKPIComponentPair result = new WorkloadStampsProto.KPICategoryKPIComponentPair(this);
        result.key_ = key_;
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof WorkloadStampsProto.KPICategoryKPIComponentPair) {
          return mergeFrom((WorkloadStampsProto.KPICategoryKPIComponentPair)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(WorkloadStampsProto.KPICategoryKPIComponentPair other) {
        if (other == WorkloadStampsProto.KPICategoryKPIComponentPair.getDefaultInstance()) return this;
        if (other.key_ != 0) {
          setKeyValue(other.getKeyValue());
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        WorkloadStampsProto.KPICategoryKPIComponentPair parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (WorkloadStampsProto.KPICategoryKPIComponentPair) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int key_ = 0;
      /**
       * <code>optional .KPICategory key = 1;</code>
       */
      public int getKeyValue() {
        return key_;
      }
      /**
       * <code>optional .KPICategory key = 1;</code>
       */
      public Builder setKeyValue(int value) {
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .KPICategory key = 1;</code>
       */
      public WorkloadStampsProto.KPICategory getKey() {
        WorkloadStampsProto.KPICategory result = WorkloadStampsProto.KPICategory.valueOf(key_);
        return result == null ? WorkloadStampsProto.KPICategory.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .KPICategory key = 1;</code>
       */
      public Builder setKey(WorkloadStampsProto.KPICategory value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        key_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .KPICategory key = 1;</code>
       */
      public Builder clearKey() {
        
        key_ = 0;
        onChanged();
        return this;
      }

      private WorkloadStampsProto.KPIComponent value_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          WorkloadStampsProto.KPIComponent, WorkloadStampsProto.KPIComponent.Builder, WorkloadStampsProto.KPIComponentOrBuilder> valueBuilder_;
      /**
       * <code>optional .KPIComponent value = 2;</code>
       */
      public boolean hasValue() {
        return valueBuilder_ != null || value_ != null;
      }
      /**
       * <code>optional .KPIComponent value = 2;</code>
       */
      public WorkloadStampsProto.KPIComponent getValue() {
        if (valueBuilder_ == null) {
          return value_ == null ? WorkloadStampsProto.KPIComponent.getDefaultInstance() : value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .KPIComponent value = 2;</code>
       */
      public Builder setValue(WorkloadStampsProto.KPIComponent value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .KPIComponent value = 2;</code>
       */
      public Builder setValue(
          WorkloadStampsProto.KPIComponent.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .KPIComponent value = 2;</code>
       */
      public Builder mergeValue(WorkloadStampsProto.KPIComponent value) {
        if (valueBuilder_ == null) {
          if (value_ != null) {
            value_ =
              WorkloadStampsProto.KPIComponent.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .KPIComponent value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = null;
          onChanged();
        } else {
          value_ = null;
          valueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .KPIComponent value = 2;</code>
       */
      public WorkloadStampsProto.KPIComponent.Builder getValueBuilder() {
        
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .KPIComponent value = 2;</code>
       */
      public WorkloadStampsProto.KPIComponentOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_ == null ?
              WorkloadStampsProto.KPIComponent.getDefaultInstance() : value_;
        }
      }
      /**
       * <code>optional .KPIComponent value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          WorkloadStampsProto.KPIComponent, WorkloadStampsProto.KPIComponent.Builder, WorkloadStampsProto.KPIComponentOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              WorkloadStampsProto.KPIComponent, WorkloadStampsProto.KPIComponent.Builder, WorkloadStampsProto.KPIComponentOrBuilder>(
                  getValue(),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:KPICategoryKPIComponentPair)
    }

    // @@protoc_insertion_point(class_scope:KPICategoryKPIComponentPair)
    private static final WorkloadStampsProto.KPICategoryKPIComponentPair DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new WorkloadStampsProto.KPICategoryKPIComponentPair();
    }

    public static WorkloadStampsProto.KPICategoryKPIComponentPair getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KPICategoryKPIComponentPair>
        PARSER = new com.google.protobuf.AbstractParser<KPICategoryKPIComponentPair>() {
      public KPICategoryKPIComponentPair parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new KPICategoryKPIComponentPair(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<KPICategoryKPIComponentPair> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KPICategoryKPIComponentPair> getParserForType() {
      return PARSER;
    }

    public WorkloadStampsProto.KPICategoryKPIComponentPair getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DoubleArrayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DoubleArray)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated double array = 1;</code>
     */
    java.util.List<java.lang.Double> getArrayList();
    /**
     * <code>repeated double array = 1;</code>
     */
    int getArrayCount();
    /**
     * <code>repeated double array = 1;</code>
     */
    double getArray(int index);
  }
  /**
   * Protobuf type {@code DoubleArray}
   */
  public  static final class DoubleArray extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:DoubleArray)
      DoubleArrayOrBuilder {
    // Use DoubleArray.newBuilder() to construct.
    private DoubleArray(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private DoubleArray() {
      array_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DoubleArray(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                array_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              array_.add(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                array_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                array_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          array_ = java.util.Collections.unmodifiableList(array_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return WorkloadStampsProto.internal_static_DoubleArray_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return WorkloadStampsProto.internal_static_DoubleArray_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              WorkloadStampsProto.DoubleArray.class, WorkloadStampsProto.DoubleArray.Builder.class);
    }

    public static final int ARRAY_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> array_;
    /**
     * <code>repeated double array = 1;</code>
     */
    public java.util.List<java.lang.Double>
        getArrayList() {
      return array_;
    }
    /**
     * <code>repeated double array = 1;</code>
     */
    public int getArrayCount() {
      return array_.size();
    }
    /**
     * <code>repeated double array = 1;</code>
     */
    public double getArray(int index) {
      return array_.get(index);
    }
    private int arrayMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getArrayList().size() > 0) {
        output.writeRawVarint32(10);
        output.writeRawVarint32(arrayMemoizedSerializedSize);
      }
      for (int i = 0; i < array_.size(); i++) {
        output.writeDoubleNoTag(array_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getArrayList().size();
        size += dataSize;
        if (!getArrayList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        arrayMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static WorkloadStampsProto.DoubleArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static WorkloadStampsProto.DoubleArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static WorkloadStampsProto.DoubleArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static WorkloadStampsProto.DoubleArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static WorkloadStampsProto.DoubleArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static WorkloadStampsProto.DoubleArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static WorkloadStampsProto.DoubleArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static WorkloadStampsProto.DoubleArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static WorkloadStampsProto.DoubleArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static WorkloadStampsProto.DoubleArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(WorkloadStampsProto.DoubleArray prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DoubleArray}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DoubleArray)
        WorkloadStampsProto.DoubleArrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return WorkloadStampsProto.internal_static_DoubleArray_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return WorkloadStampsProto.internal_static_DoubleArray_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                WorkloadStampsProto.DoubleArray.class, WorkloadStampsProto.DoubleArray.Builder.class);
      }

      // Construct using WorkloadStampsProto.DoubleArray.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        array_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return WorkloadStampsProto.internal_static_DoubleArray_descriptor;
      }

      public WorkloadStampsProto.DoubleArray getDefaultInstanceForType() {
        return WorkloadStampsProto.DoubleArray.getDefaultInstance();
      }

      public WorkloadStampsProto.DoubleArray build() {
        WorkloadStampsProto.DoubleArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public WorkloadStampsProto.DoubleArray buildPartial() {
        WorkloadStampsProto.DoubleArray result = new WorkloadStampsProto.DoubleArray(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          array_ = java.util.Collections.unmodifiableList(array_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.array_ = array_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof WorkloadStampsProto.DoubleArray) {
          return mergeFrom((WorkloadStampsProto.DoubleArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(WorkloadStampsProto.DoubleArray other) {
        if (other == WorkloadStampsProto.DoubleArray.getDefaultInstance()) return this;
        if (!other.array_.isEmpty()) {
          if (array_.isEmpty()) {
            array_ = other.array_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureArrayIsMutable();
            array_.addAll(other.array_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        WorkloadStampsProto.DoubleArray parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (WorkloadStampsProto.DoubleArray) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Double> array_ = java.util.Collections.emptyList();
      private void ensureArrayIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          array_ = new java.util.ArrayList<java.lang.Double>(array_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double array = 1;</code>
       */
      public java.util.List<java.lang.Double>
          getArrayList() {
        return java.util.Collections.unmodifiableList(array_);
      }
      /**
       * <code>repeated double array = 1;</code>
       */
      public int getArrayCount() {
        return array_.size();
      }
      /**
       * <code>repeated double array = 1;</code>
       */
      public double getArray(int index) {
        return array_.get(index);
      }
      /**
       * <code>repeated double array = 1;</code>
       */
      public Builder setArray(
          int index, double value) {
        ensureArrayIsMutable();
        array_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double array = 1;</code>
       */
      public Builder addArray(double value) {
        ensureArrayIsMutable();
        array_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double array = 1;</code>
       */
      public Builder addAllArray(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureArrayIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, array_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double array = 1;</code>
       */
      public Builder clearArray() {
        array_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:DoubleArray)
    }

    // @@protoc_insertion_point(class_scope:DoubleArray)
    private static final WorkloadStampsProto.DoubleArray DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new WorkloadStampsProto.DoubleArray();
    }

    public static WorkloadStampsProto.DoubleArray getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DoubleArray>
        PARSER = new com.google.protobuf.AbstractParser<DoubleArray>() {
      public DoubleArray parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new DoubleArray(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<DoubleArray> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DoubleArray> getParserForType() {
      return PARSER;
    }

    public WorkloadStampsProto.DoubleArray getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_WorkloadTimeStampsProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_WorkloadTimeStampsProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_KPIComponent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_KPIComponent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_KPIComponent_InstancesEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_KPIComponent_InstancesEntry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_KPIInstance_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_KPIInstance_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_KPIMetricDoubleArrayPair_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_KPIMetricDoubleArrayPair_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_KPICategoryKPIComponentPair_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_KPICategoryKPIComponentPair_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DoubleArray_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DoubleArray_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031WorkloadStampsProto.proto\"q\n\027WorkloadT" +
      "imeStampsProto\022\023\n\013_timestamps\030\001 \003(\003\022\024\n\014_" +
      "symmetrixId\030\002 \001(\t\022+\n\005_data\030\003 \003(\0132\034.KPICa" +
      "tegoryKPIComponentPair\"\274\001\n\014KPIComponent\022" +
      "\036\n\010category\030\001 \001(\0162\014.KPICategory\022/\n\tinsta" +
      "nces\030\002 \003(\0132\034.KPIComponent.InstancesEntry" +
      "\022\033\n\007metrics\030\003 \003(\0162\n.KPIMetric\032>\n\016Instanc" +
      "esEntry\022\013\n\003key\030\001 \001(\t\022\033\n\005value\030\002 \001(\0132\014.KP" +
      "IInstance:\0028\001\"f\n\013KPIInstance\022)\n\006values\030\001" +
      " \003(\0132\031.KPIMetricDoubleArrayPair\022\014\n\004name\030",
      "\002 \001(\t\022\036\n\010category\030\003 \001(\0162\014.KPICategory\"P\n" +
      "\030KPIMetricDoubleArrayPair\022\027\n\003key\030\001 \001(\0162\n" +
      ".KPIMetric\022\033\n\005value\030\002 \001(\0132\014.DoubleArray\"" +
      "V\n\033KPICategoryKPIComponentPair\022\031\n\003key\030\001 " +
      "\001(\0162\014.KPICategory\022\034\n\005value\030\002 \001(\0132\r.KPICo" +
      "mponent\"\034\n\013DoubleArray\022\r\n\005array\030\001 \003(\001*\346\005" +
      "\n\013KPICategory\022\t\n\005ARRAY\020\000\022\n\n\006DEVICE\020\001\022\n\n\006" +
      "FE_DIR\020\002\022\n\n\006BE_DIR\020\003\022\013\n\007RDF_DIR\020\004\022\010\n\004DIS" +
      "K\020\005\022\013\n\007FE_PORT\020\006\022\006\n\002CP\020\007\022\014\n\010RDFA_GRP\020\010\022\014" +
      "\n\010RDF_LINK\020\t\022\t\n\005EVENT\020\n\022\014\n\010DEV_POOL\020\013\022\r\n",
      "\tTHIN_POOL\020\014\022\013\n\007RDF_DEV\020\r\022\014\n\010DEV_CACH\020\016\022" +
      "\014\n\010EXT_DISK\020\017\022\t\n\005BOARD\020\020\022\021\n\rDEV_FRONT_EN" +
      "D\020\021\022\020\n\014DEV_BACK_END\020\022\022\023\n\017DEVICE_LOCALITY" +
      "\020\023\022\016\n\nRDF_SYSTEM\020\024\022\026\n\022RDF_NW_COMPRESSION" +
      "\020\025\022\020\n\014SPDLMT_GROUP\020\026\022\022\n\016TCP_CONNECTION\020\027" +
      "\022\017\n\013DIR_NETWORK\020\030\022\020\n\014NW_INTERFACE\020\031\022\014\n\010O" +
      "RS_PORT\020\032\022\016\n\nORS_DEVICE\020\033\022\017\n\013FE_DIR_PORT" +
      "\020\034\022\020\n\014RDF_DIR_PORT\020\035\022\017\n\013BE_DIR_PORT\020\036\022\013\n" +
      "\007EDS_DIR\020\037\022\022\n\016CONTAINER_PORT\020 \022\007\n\003GOS\020!\022" +
      "\n\n\006IM_DIR\020\"\022\013\n\007IM_SLIC\020#\022\010\n\004CORE\020$\022\014\n\010CO",
      "RE_EDS\020%\022\013\n\007CORE_IM\020&\022\013\n\007CORE_FE\020\'\022\013\n\007CO" +
      "RE_BE\020(\022\014\n\010CORE_RDF\020)\022\016\n\nCORE_FICON\020*\022\020\n" +
      "\014ISCSI_CLIENT\020+\022\020\n\014ISCSI_TARGET\020,\022\016\n\nDIS" +
      "K_GROUP\020-\022\030\n\024DEV_POOL_ALLOCATIONS\020.\022\r\n\tI" +
      "NITIATOR\020/\022\n\n\006HEADER\0200*\311?\n\tKPIMetric\022.\n*" +
      "im_dir_memory_page_fall_through_time_tot" +
      "al\020\000\022\"\n\036im_dir_memory_page_usage_total\020\001" +
      "\022\036\n\032eds_dir_random_read_misses\020\002\022%\n!eds_" +
      "dir_random_read_misses_kbytes\020\003\022\037\n\033eds_d" +
      "ir_random_write_misses\020\004\022&\n\"eds_dir_rand",
      "om_write_misses_kbytes\020\005\022\031\n\025rdfdir_numKb" +
      "ytesRecvd\020\006\022\030\n\024rdfdir_numKbytesSent\020\007\022\036\n" +
      "\032rdfdir_total_copy_io_count\020\010\022\037\n\033rdfdir_" +
      "total_copy_io_kbytes\020\t\022\"\n\036rdfdir_total_s" +
      "rdfs_write_count\020\n\022\023\n\017core_time_stamp\020\013\022" +
      "\030\n\024core_symmk_idle_time\020\014\022\026\n\022core_im_tim" +
      "e_stamp\020\r\022\030\n\024core_im_page_in_time\020\016\022\031\n\025c" +
      "ore_im_page_out_time\020\017\022\036\n\032core_im_enviro" +
      "nmental_time\020\020\022\026\n\022core_im_other_time\020\021\022\034" +
      "\n\030core_im_symmk_total_time\020\022\022\027\n\023core_eds",
      "_time_stamp\020\023\022\033\n\027core_eds_emulation_time" +
      "\020\024\022\034\n\030core_eds_io_machine_time\020\025\022\037\n\033core" +
      "_eds_lp_io_machine_time\020\026\022\036\n\032core_eds_ho" +
      "usekeeping_time\020\027\022\036\n\032core_eds_lrep_contr" +
      "ol_time\020\030\022\024\n\020core_eds_vp_time\020\031\022\036\n\032core_" +
      "eds_copy_scanner_time\020\032\022\031\n\025core_eds_pyra" +
      "mid_time\020\033\022\026\n\022core_eds_scan_time\020\034\022 \n\034co" +
      "re_eds_snow_spillover_time\020\035\022$\n core_eds" +
      "_remote_replication_time\020\036\022\032\n\026core_eds_s" +
      "yscalls_time\020\037\022\032\n\026core_eds_watchdog_time",
      "\020 \022\"\n\036core_eds_allocation_split_time\020!\022\025" +
      "\n\021core_eds_fsm_time\020\"\022\035\n\031core_eds_symmk_" +
      "total_time\020#\022\026\n\022core_fe_time_stamp\020$\022\034\n\030" +
      "core_fe_total_reads_time\020%\022\035\n\031core_fe_to" +
      "tal_writes_time\020&\022\031\n\025core_fe_syscalls_ti" +
      "me\020\'\022\032\n\026core_fe_managment_time\020(\022\032\n\026core" +
      "_fe_link_port_time\020)\022 \n\034core_fe_xrc_repl" +
      "ication_time\020*\022\033\n\027core_fe_zhpf_reads_tim" +
      "e\020+\022\034\n\030core_fe_zhpf_writes_time\020,\022\037\n\033cor" +
      "e_fe_odx_vaai_xcopy_time\020-\022$\n core_fe_od",
      "x_vaai_write_same_time\020.\022\036\n\032core_fe_odx_" +
      "vaai_lock_time\020/\022\024\n\020core_fe_cdi_time\0200\022\030" +
      "\n\024core_fe_lp_task_time\0201\022\034\n\030core_fe_symm" +
      "k_total_time\0202\022\026\n\022core_be_time_stamp\0203\022\"" +
      "\n\036core_be_total_read_misses_time\0204\022\035\n\031co" +
      "re_be_total_writes_time\0205\022\037\n\033core_be_tot" +
      "al_prefetch_time\0206\022!\n\035core_be_total_copy" +
      "_reads_time\0207\022\"\n\036core_be_total_copy_writ" +
      "es_time\0208\022\031\n\025core_be_syscalls_time\0209\022\032\n\026" +
      "core_be_managment_time\020:\022\030\n\024core_be_rebu",
      "ild_time\020;\022\026\n\022core_be_ivtoc_time\020<\022%\n!co" +
      "re_be_software_compression_time\020=\022\026\n\022cor" +
      "e_be_other_time\020>\022\024\n\020core_be_cdi_time\020?\022" +
      "\030\n\024core_be_lp_task_time\020@\022\034\n\030core_be_sym" +
      "mk_total_time\020A\022\027\n\023core_rdf_time_stamp\020B" +
      "\022\035\n\031core_rdf_total_reads_time\020C\022\036\n\032core_" +
      "rdf_total_writes_time\020D\022\"\n\036core_rdf_tota" +
      "l_copy_reads_time\020E\022#\n\037core_rdf_total_co" +
      "py_writes_time\020F\022\032\n\026core_rdf_syscalls_ti" +
      "me\020G\022\027\n\023core_rdf_other_time\020H\022\031\n\025core_rd",
      "f_lp_task_time\020I\022!\n\035core_rdf_link_manage" +
      "ment_time\020J\022&\n\"core_rdf_software_compres" +
      "sion_time\020K\022\035\n\031core_rdf_symmk_total_time" +
      "\020L\022\031\n\025core_ficon_time_stamp\020M\022$\n core_fi" +
      "con_random_read_hits_time\020N\022%\n!core_fico" +
      "n_random_write_hits_time\020O\022\'\n#core_ficon" +
      "_random_write_misses_time\020P\022&\n\"core_fico" +
      "n_random_read_misses_time\020Q\022*\n&core_fico" +
      "n_total_sequential_reads_time\020R\022+\n\'core_" +
      "ficon_total_sequential_writes_time\020S\022\034\n\030",
      "core_ficon_syscalls_time\020T\022\035\n\031core_ficon" +
      "_managment_time\020U\022\035\n\031core_ficon_link_por" +
      "t_time\020V\022#\n\037core_ficon_xrc_replication_t" +
      "ime\020W\022\036\n\032core_ficon_zhpf_reads_time\020X\022\037\n" +
      "\033core_ficon_zhpf_writes_time\020Y\022\027\n\023core_f" +
      "icon_cdi_time\020Z\022\033\n\027core_ficon_lp_task_ti" +
      "me\020[\022\037\n\033core_ficon_symmk_total_time\020\\\022\023\n" +
      "\017gos_memory_size\020]\022\020\n\014gos_num_cpus\020^\022 \n\034" +
      "rdfagrp_sysWritePendingCount\020_\022\031\n\025rdfagr" +
      "p_dseTracksUsed\020`\022\035\n\031rdfagrp_hostWriteNu",
      "mIoReq\020a\022\036\n\032rdfagrp_hostWriteNumMbytes\020b" +
      "\022\022\n\016bedir_numIoReq\020c\022\030\n\024bedir_dirUtiliza" +
      "tion\020d\022\030\n\024bedir_compress_reads\020e\022\036\n\032bedi" +
      "r_compress_read_kbytes\020f\022\031\n\025bedir_compre" +
      "ss_writes\020g\022\037\n\033bedir_compress_write_kbyt" +
      "es\020h\022&\n\"fe_dir_port_port_derived_ios_cou" +
      "nt\020i\0221\n-fe_dir_port_port_derived_total_t" +
      "hruput_kbytes\020j\022\037\n\033fe_dir_port_port_read" +
      "_count\020k\022 \n\034fe_dir_port_port_write_count" +
      "\020l\022(\n$fe_dir_port_port_read_thruput_kbyt",
      "es\020m\022)\n%fe_dir_port_port_write_thruput_k" +
      "bytes\020n\022\032\n\026fe_dir_port_port_speed\020o\022 \n\034f" +
      "e_dir_port_negotiated_speed\020p\022\037\n\033fedir_a" +
      "ccumQueueDepthRange0\020q\022\037\n\033fedir_accumQue" +
      "ueDepthRange5\020r\022 \n\034fedir_accumQueueDepth" +
      "Range10\020s\022 \n\034fedir_accumQueueDepthRange2" +
      "0\020t\022 \n\034fedir_accumQueueDepthRange40\020u\022 \n" +
      "\034fedir_accumQueueDepthRange80\020v\022!\n\035fedir" +
      "_accumQueueDepthRange160\020w\022!\n\035fedir_accu" +
      "mQueueDepthRange320\020x\022!\n\035fedir_accumQueu",
      "eDepthRange640\020y\022%\n!fedir_accumQueueDept" +
      "hRangeOver640\020z\022\037\n\033fedir_queueDepthCount" +
      "Range0\020{\022\037\n\033fedir_queueDepthCountRange5\020" +
      "|\022 \n\034fedir_queueDepthCountRange10\020}\022 \n\034f" +
      "edir_queueDepthCountRange20\020~\022 \n\034fedir_q" +
      "ueueDepthCountRange40\020\177\022!\n\034fedir_queueDe" +
      "pthCountRange80\020\200\001\022\"\n\035fedir_queueDepthCo" +
      "untRange160\020\201\001\022\"\n\035fedir_queueDepthCountR" +
      "ange320\020\202\001\022\"\n\035fedir_queueDepthCountRange" +
      "640\020\203\001\022&\n!fedir_queueDepthCountRangeOver",
      "640\020\204\001\022 \n\033fedir_read_resp_time_count0\020\205\001" +
      "\022 \n\033fedir_read_resp_time_count1\020\206\001\022 \n\033fe" +
      "dir_read_resp_time_count2\020\207\001\022 \n\033fedir_re" +
      "ad_resp_time_count3\020\210\001\022 \n\033fedir_read_res" +
      "p_time_count4\020\211\001\022 \n\033fedir_read_resp_time" +
      "_count5\020\212\001\022 \n\033fedir_read_resp_time_count" +
      "6\020\213\001\022 \n\033fedir_read_resp_time_count7\020\214\001\022!" +
      "\n\034fedir_write_resp_time_count0\020\215\001\022!\n\034fed" +
      "ir_write_resp_time_count1\020\216\001\022!\n\034fedir_wr" +
      "ite_resp_time_count2\020\217\001\022!\n\034fedir_write_r",
      "esp_time_count3\020\220\001\022!\n\034fedir_write_resp_t" +
      "ime_count4\020\221\001\022!\n\034fedir_write_resp_time_c" +
      "ount5\020\222\001\022!\n\034fedir_write_resp_time_count6" +
      "\020\223\001\022!\n\034fedir_write_resp_time_count7\020\224\001\022\023" +
      "\n\016fedir_numIoReq\020\225\001\022(\n#fedir_derived_avg" +
      "_queue_depth_range\020\226\001\022\037\n\032fedir_queueDept" +
      "hCountRange\020\227\001\022\037\n\032fedir_read_resp_time_c" +
      "ount\020\230\001\022 \n\033fedir_write_resp_time_count\020\231" +
      "\001\022#\n\036fedir_derived_avg_read_time_ms\020\232\001\022$" +
      "\n\037fedir_derived_avg_write_time_ms\020\233\001\022\031\n\024",
      "fedir_dirUtilization\020\234\001\022\035\n\030fedir_total_s" +
      "yscall_time\020\235\001\022)\n$fedir_derived_avg_queu" +
      "e_depth_range0\020\236\001\022)\n$fedir_derived_avg_q" +
      "ueue_depth_range5\020\237\001\022*\n%fedir_derived_av" +
      "g_queue_depth_range10\020\240\001\022*\n%fedir_derive" +
      "d_avg_queue_depth_range20\020\241\001\022*\n%fedir_de" +
      "rived_avg_queue_depth_range40\020\242\001\022*\n%fedi" +
      "r_derived_avg_queue_depth_range80\020\243\001\022+\n&" +
      "fedir_derived_avg_queue_depth_range160\020\244" +
      "\001\022+\n&fedir_derived_avg_queue_depth_range",
      "320\020\245\001\022+\n&fedir_derived_avg_queue_depth_" +
      "range640\020\246\001\022/\n*fedir_derived_avg_queue_d" +
      "epth_rangeOver640\020\247\001\022\031\n\024array_cacheTrack" +
      "Size\020\250\001\022\030\n\023array_numKbytesRead\020\251\001\022\033\n\026arr" +
      "ay_numKbytesWritten\020\252\001\022 \n\033array_numWrite" +
      "PendingTracks\020\253\001\022\022\n\rarray_numHits\020\254\001\022\026\n\021" +
      "array_numReadHits\020\255\001\022\025\n\020array_numReadReq" +
      "\020\256\001\022\026\n\021array_numWriteReq\020\257\001\022\030\n\023array_sys" +
      "MaxWpLimit\020\260\001\022\023\n\016array_numIoReq\020\261\001\022\033\n\026di" +
      "sk_totalScsiCommands\020\262\001\022\026\n\021disk_readComm",
      "ands\020\263\001\022\027\n\022disk_writeCommands\020\264\001\022\035\n\030disk" +
      "_numSkipMaskCommands\020\265\001\022\035\n\030disk_numXorWr" +
      "iteCommands\020\266\001\0221\n,disk_derived_xor_write" +
      "_read_commands_per_sec\020\267\001\022\034\n\027disk_numXor" +
      "ReadCommands\020\270\001\022\032\n\025disk_numKbytesWritten" +
      "\020\271\001\022&\n!disk_derived_avg_kbytes_per_write" +
      "\020\272\001\022\027\n\022disk_numKbytesRead\020\273\001\022%\n disk_der" +
      "ived_avg_kbytes_per_read\020\274\001\022\"\n\035disk_deri" +
      "ved_avg_read_time_ms\020\275\001\022#\n\036disk_derived_" +
      "avg_write_time_ms\020\276\001\022\027\n\022disk_totalReadTi",
      "me\020\277\001\022\030\n\023disk_totalWriteTime\020\300\001\022,\n\'dev_f" +
      "ront_end_derived_total_ios_per_sec\020\301\001\022.\n" +
      ")dev_front_end_derived_total_reads_per_s" +
      "ec\020\302\001\022$\n\037dev_front_end_num_seq_read_reqs" +
      "\020\303\001\022%\n dev_front_end_num_seq_write_reqs\020" +
      "\304\001\022.\n)dev_front_end_derived_kbytes_read_" +
      "per_sec\020\305\001\0221\n,dev_front_end_derived_kbyt" +
      "es_written_per_sec\020\306\001\0222\n-dev_front_end_d" +
      "erived_avg_read_size_in_kbytes\020\307\001\0223\n.dev" +
      "_front_end_derived_avg_write_size_in_kby",
      "tes\020\310\001\022 \n\033dev_front_end_num_wp_tracks\020\311\001" +
      "\022&\n!dev_front_end_device_max_wp_limit\020\312\001" +
      "\0220\n+dev_front_end_derived_sampled_avg_re" +
      "ad_time\020\313\001\0221\n,dev_front_end_derived_samp" +
      "led_avg_write_time\020\314\001\022\034\n\027dev_front_end_c" +
      "rm_reads\020\315\001\022#\n\036dev_front_end_crm_reads_k" +
      "bytes\020\316\001\022\'\n\"dev_front_end_num_random_rea" +
      "d_reqs\020\317\001\022(\n#dev_front_end_num_random_wr" +
      "ite_reqs\020\320\001\022\'\n\"dev_front_end_num_random_" +
      "read_hits\020\321\001\022(\n#dev_front_end_num_random",
      "_write_hits\020\322\001\0225\n0dev_front_end_derived_" +
      "total_write_misses_per_sec\020\323\001\022\036\n\031dev_fro" +
      "nt_end_kbytes_read\020\324\001\022!\n\034dev_front_end_k" +
      "bytes_written\020\325\001\022$\n\037dev_front_end_device" +
      "_block_size\020\326\001\022\"\n\035dev_front_end_total_re" +
      "ad_time\020\327\001\022#\n\036dev_front_end_total_write_" +
      "time\020\330\001\022\037\n\032dev_back_end_num_wp_tracks\020\331\001" +
      "\022 \n\033dev_back_end_num_write_reqs\020\332\001\022\037\n\032de" +
      "v_back_end_num_pf_tracks\020\333\001\022\037\n\032dev_back_" +
      "end_num_read_reqs\020\334\001\0220\n+dev_back_end_der",
      "ived_da_kbytes_read_per_sec\020\335\001\0223\n.dev_ba" +
      "ck_end_derived_da_kbytes_written_per_sec" +
      "\020\336\001\022$\n\037dev_back_end_num_blocks_written\020\337" +
      "\001\022!\n\034dev_back_end_num_blocks_read\020\340\001\022#\n\036" +
      "dev_back_end_device_block_size\020\341\001\022\032\n\025rdf" +
      "device_total_reads\020\342\001\022\033\n\026rdfdevice_total" +
      "_writes\020\343\001\022\034\n\027rdfdevice_bytes_read_kb\020\344\001" +
      "\022\037\n\032rdfdevice_bytes_written_kb\020\345\001\022&\n!dev" +
      "icepool_allocatedTracksPerPool\020\346\001\022\034\n\027dev" +
      "icepool_destageWrite\020\347\001\022\036\n\031devicepool_de",
      "stageWriteKb\020\350\001\022\032\n\025devicepool_prefetchKb" +
      "\020\351\001\022\030\n\023devicepool_prefetch\020\352\001\022 \n\033devicep" +
      "ool_randomReadMissKb\020\353\001\022\036\n\031devicepool_ra" +
      "ndomReadMiss\020\354\001\022\'\n\"devicepool_compressed" +
      "TracksPerPool\020\355\001\022%\n thinpool_total_enabl" +
      "ed_tracks_64\020\356\001\022!\n\034thinpool_fast_egress_" +
      "counter\020\357\001\022\"\n\035thinpool_total_free_tracks" +
      "_64\020\360\001\022\"\n\035thinpool_total_used_tracks_64\020" +
      "\361\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_WorkloadTimeStampsProto_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_WorkloadTimeStampsProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_WorkloadTimeStampsProto_descriptor,
        new java.lang.String[] { "Timestamps", "SymmetrixId", "Data", });
    internal_static_KPIComponent_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_KPIComponent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_KPIComponent_descriptor,
        new java.lang.String[] { "Category", "Instances", "Metrics", });
    internal_static_KPIComponent_InstancesEntry_descriptor =
      internal_static_KPIComponent_descriptor.getNestedTypes().get(0);
    internal_static_KPIComponent_InstancesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_KPIComponent_InstancesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_KPIInstance_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_KPIInstance_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_KPIInstance_descriptor,
        new java.lang.String[] { "Values", "Name", "Category", });
    internal_static_KPIMetricDoubleArrayPair_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_KPIMetricDoubleArrayPair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_KPIMetricDoubleArrayPair_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_KPICategoryKPIComponentPair_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_KPICategoryKPIComponentPair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_KPICategoryKPIComponentPair_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_DoubleArray_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_DoubleArray_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_DoubleArray_descriptor,
        new java.lang.String[] { "Array", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
